<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>强化学习资源整理</title>
      <link href="/2022/03/03/ai-rlresources/"/>
      <url>/2022/03/03/ai-rlresources/</url>
      
        <content type="html"><![CDATA[<h1 id="教程书籍类"><a href="#教程书籍类" class="headerlink" title="教程书籍类"></a>教程书籍类</h1><p><a href="http://deeprl.neurondance.com/d/107">深度强化学习实验室 强化学习路线</a><br>​</p><p><a href="https://www.davidsilver.uk/teaching/">David2015RL Course slides</a><br><a href="https://zhuanlan.zhihu.com/reinforce">知乎 David 中文讲解及实践</a><br><a href="https://zhuanlan.zhihu.com/p/50478310">知乎 David 课程笔记 by 搬砖的旺财</a><br>​</p><p><a href="https://www.bilibili.com/video/BV1UE411G78S?from=search&seid=9190655465527720792">台大李宏毅B站课程</a><br><a href="https://www.bilibili.com/video/BV13W411Y75P?from=search&seid=9190655465527720792">莫烦python RL</a><br>​</p><p><a href="https://datawhalechina.github.io/easy-rl/#/">EasyRL</a>          <a href="https://github.com/datawhalechina/easy-rl">pdf</a><br>​</p><p><a href="http://incompleteideas.net/book/the-book-2nd.html">RL An Introduction</a><br><a href="http://www.ualberta.ca/~szepesva/papers/RLAlgsInMDPs.pdf">RL Algorithms </a><br>​</p><p><a href="https://zhuanlan.zhihu.com/p/143846522">知乎资源合集1</a><br><a href="https://zhuanlan.zhihu.com/p/34918639">知乎资源合集2</a></p><h1 id="Paper-阅读"><a href="#Paper-阅读" class="headerlink" title="Paper 阅读"></a>Paper 阅读</h1><p><a href="https://lilianweng.github.io/posts/2018-04-08-policy-gradient/">Policy Gradient 算法讲解</a><br><a href="https://paperexplained.cn/articles/article/detail/31/">Policy Gradient 算法讲解中文版</a><br>​</p><p><a href="https://zhuanlan.zhihu.com/p/50343077">知乎 spinningup 推荐论文合集 </a><br><a href="https://zhuanlan.zhihu.com/c_1215667894253830144">知乎 白话算法系列 by 张斯俊</a></p><h1 id="代码复现类"><a href="#代码复现类" class="headerlink" title="代码复现类"></a>代码复现类</h1><p><a href="https://www.zhihu.com/question/377263715/answer/1120555103">知乎 RL 框架对比 </a></p><p><a href="https://spinningup.openai.com/en/latest/">OpAI Spinningup </a>                    <a href="https://github.com/openai/spinningup/tree/master/spinup">code</a>              <a href="https://spinningup.readthedocs.io/zh_CN/latest/index.html">中文版</a><br><a href="https://stable-baselines3.readthedocs.io/en/master/">STB3（基于Pytorch框架）</a>       <a href="https://github.com/DLR-RM/stable-baselines3">code   </a><br><a href="https://github.com/paddlepaddle/parl">百度飞浆</a><br><a href="https://github.com/thu-ml/tianshou">清华天授</a><br>​</p><p><a href="https://rlzoo.readthedocs.io/en/latest/">RLZoo</a>                                      <a href="https://github.com/tensorlayer/RLzoo">code</a><br>​</p><p><strong>YTB代码复现</strong></p><p><a href="https://www.youtube.com/c/NicholasRenotte">Nicholas Renotte</a><br><a href="https://www.youtube.com/c/MachineLearningwithPhil">Machine Learning with Phil</a></p><h1 id="仿真环境类"><a href="#仿真环境类" class="headerlink" title="仿真环境类"></a>仿真环境类</h1><p><a href="https://www.zhihu.com/question/307879623">机器人仿真环境对比知乎问题</a></p><p><strong>OpenAI Gym</strong><br><a href="http://gym.openai.com/docs/">doc</a>                 <a href="https://github.com/openai/gym">code</a></p><p><strong>OpenAI Mujoco</strong><br><a href="https://mujoco.readthedocs.io/en/latest/overview.html">doc</a>            <a href="https://github.com/deepmind/mujoco">code</a><br><a href="https://zhuanlan.zhihu.com/p/99991106">zhihu教程Mujoco机器人建模 by Robot Learning</a><br>​</p><p><strong>pybullet</strong><br><a href="https://pybullet.org/wordpress/">官方介绍</a>           <a href="https://docs.google.com/document/d/10sXEhzFRSnvFcl3XxNGhnD4N2SedqwdAvK3dsihxVUA/edit#heading=h.2ye70wns7io3">doc</a>            <a href="https://github.com/bulletphysics/bullet3">code</a><br><a href="https://zhuanlan.zhihu.com/p/349221940">zhihu教程pybullet笔记 by 锦恢</a>       <a href="https://github.com/LSTM-Kirigaya/MaplessNavigation">code</a><br><a href="https://www.zhihu.com/column/c_1377640558450540544">zhihu pybullet搭建机械臂 by Losgy浩</a><br><a href="https://www.guyuehome.com/34388">古月居 pybullet机械臂 by bug404</a><br>​</p><p><strong>Ros+Gazebo&#x2F;Webosts</strong><br><a href="http://wiki.ros.org/reinforcement_learning/Tutorials/Reinforcement%20Learning%20Tutorial">Ros RL 教程</a><br><a href="https://www.theconstructsim.com/testing-different-openai-rl-algorithms-with-ros-and-gazebo/">Ros RL Gazebo construct</a><br><a href="https://ai-mrkogao.github.io/reinforcement%20learning/ROSRL/">Ros RL Gazebo</a><br>​</p><p><strong>vrep</strong><br><a href="https://ctmakro.github.io/site/on_learning/rl/vrep.html">VREP+Gym</a><br><a href="https://github.com/stepjam/PyRep">RyRep</a><br><a href="https://zhuanlan.zhihu.com/p/398874515">zhihu Vrep + Gym</a></p><h1 id="论坛交流"><a href="#论坛交流" class="headerlink" title="论坛交流"></a>论坛交流</h1><p><a href="http://deeprl.neurondance.com/">深度强化学习实验室</a><br>​</p><p><a href="http://rlchina.org/">RLChina</a></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雁栖湖拍蚊记</title>
      <link href="/2022/03/02/sb-pwj/"/>
      <url>/2022/03/02/sb-pwj/</url>
      
        <content type="html"><![CDATA[<p>庚子初秋，雁栖湖畔，科学院校舍。一夜寅时，熟睡，忽有蚊虫嗡嗡之声，乱拍，蚊去，然嗡嗡之声久久不去。少时，似有睡意，然耳边又起嗡嗡，再拍，蚊虫又去，其声亦久久不去。少倾，又有睡意，耳边嗡嗡又至，如此反复，难寐。</p><p>同室之友亦辗转难眠，问之，答曰:“蚊虫叮咬，痒至难眠。” 遂起身，开灯，其示蚊虫叮咬之包，手，臂，腿，足无一幸免，皆留蚊虫杰作。</p><p>吾二人苦蚊久矣，故全屋寻蚊，欲逐一灭之。<strong>白墙之上，一小虫落定，薄翅针喙，腿如发丝，是蚊也。屏息，手起，掌落，抬手，墙上唯留一点红，快哉!</strong> 然亦有黠者，彼时虽静卧于墙，当余抬手，忽而远逝，拍而不得之情似蚊虫叮咬之痒，噪矣!</p><p>床首至尾，二人来回寻蚊拍之，每灭一蚊必耀之。饱腹者墙上留红，未食者仅留身躯之影，偶有逃者，然来回折返亦可再寻之灭之。如此，各灭十数只，蚊虫难见，可睡矣。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 研究生生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>或许这是最后一次戴着口罩过春节</title>
      <link href="/2022/03/02/sb-lastkz/"/>
      <url>/2022/03/02/sb-lastkz/</url>
      
        <content type="html"><![CDATA[<p>今天是农历壬寅年的第二天，小冰在这里祝各位小果壳er们新年快乐，虎气冲天！</p><p>疫情的原因，这已经是我们戴着口罩度过的第三个春节了。</p><h2 id="2020，疫情来势汹汹"><a href="#2020，疫情来势汹汹" class="headerlink" title="2020，疫情来势汹汹"></a><strong>2020，疫情来势汹汹</strong></h2><p>20年1月初的时候，虽然武汉有了病例报告，当时全国也并没有太重视。</p><p>随着病例的增加，我们才意识到了问题的严重性。不过在除夕之前，我们的父母也并没有太当回事，觉得像03年非典那样的疫情并不会到来。</p><p>可我们都没想到的是，<strong>这次的疫情比非典要严重得多。</strong></p><p>除夕夜的央视联欢晚会临时增加了诗朗诵《爱是桥梁》，全国意识到了疫情的严峻，我们一起为武汉加油，为湖北加油！</p><p><img src="/2022/03/02/sb-lastkz/640-16462246413131.png"></p><p>我们第一次在春节戴上了口罩，也刹住了脚步，第一次足不出户过春节。</p><p>“<strong>让我们春天再相逢</strong>“，是那个春节听到最多的口号。那时的我们也不会想到口罩伴随着我们走到了2022。</p><p><img src="/2022/03/02/sb-lastkz/640-16462246413132.png"></p><p>小冰在春节的时候还和同学讨论我们的假期会不会延长，小冰斩钉截铁地说，不会！<strong>可没有想到的是，我们没能再次在母校相见。</strong></p><p><strong>那是疫情下的第一个春节，庚子年春节。</strong></p><h2 id="2021，戴口罩，已经成为习惯"><a href="#2021，戴口罩，已经成为习惯" class="headerlink" title="2021，戴口罩，已经成为习惯"></a><strong>2021，戴口罩，已经成为习惯</strong></h2><p>经过一年，戴口罩已经成为日常出行的习惯。当然，戴着口罩过春节，好像也有点习惯。</p><p>对于疫情我们已经有了经验，虽然因为春节的返乡高潮，各地均有零星病例出现，但一切可防可控。</p><p><strong>就地过年</strong>被第一次提出。小冰有很多朋友因此未能回家过年，他们大多是第一次不在家过春节，多少有些许的不习惯。</p><p><img src="/2022/03/02/sb-lastkz/640-16462246413133.jpeg"></p><p>这一年的春节，我们虽未能远行，但也不至于像上一个春节一样足不出户，多多少少有了年的味道。</p><p><strong>那是疫情下的第二个春节，辛丑年春节。</strong></p><h2 id="2022，疫情终会退去"><a href="#2022，疫情终会退去" class="headerlink" title="2022，疫情终会退去"></a><strong>2022，疫情终会退去</strong></h2><p>疫情两周年，疫情下的第三个春节到来了。</p><p>新冠病毒不断变异、传染性也不断增强，德尔塔之后是奥密克戎，据说奥密克戎的妹妹也在国外发现。但一切可防可控，我们不再惊慌。</p><p>当然，今年依然有众多就地过年的果壳er们，留守实验室的果壳er们新年快乐鸭~</p><p>我们接连接种三针疫苗，新冠特效药也即将上市，<strong>这可能是疫情下的最后一个寒冬。</strong></p><p><img src="/2022/03/02/sb-lastkz/640-16462246413134.jpeg"></p><p><strong>这是疫情下的第三个春节，也许会是疫情下的最后一个春节，壬寅年春节。</strong></p><p><img src="/2022/03/02/sb-lastkz/640-16462246413135.gif"></p><p><strong>新的一年</strong></p><p><strong>愿诸君万事顺遂</strong></p><p><strong>愿来年春节</strong></p><p><strong>我们摘下口罩</strong></p><p>**面对面地说一句<br>**</p><p><strong>过年好！</strong></p><p><img src="/2022/03/02/sb-lastkz/image-20220302203952557.png"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 疫情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们距离八小时工作制还有多远？——写在字节事件之后</title>
      <link href="/2022/03/02/sb-08/"/>
      <url>/2022/03/02/sb-08/</url>
      
        <content type="html"><![CDATA[<p>今天，<strong>字节28岁员工不幸离世</strong> 的事件迅速上至知乎热搜第一。</p><p><img src="/2022/03/02/sb-08/640.png" alt="图片"></p><p>更令人伤心的是，他还有一个<strong>怀有2个月身孕的妻子</strong>，以及<strong>每月21000，按揭30年的房贷</strong>。</p><p><img src="/2022/03/02/sb-08/640-16462243467531.png" alt="图片"></p><p>这很难不让人想到之前腾讯员工怒怼领导的事件。</p><h2 id="腾讯员工怒怼领导事件"><a href="#腾讯员工怒怼领导事件" class="headerlink" title="腾讯员工怒怼领导事件"></a><strong>腾讯员工怒怼领导事件</strong></h2><p>就在不久之前，腾讯一名员工不满【公司表彰高强度工作】的相关问题在知乎居高不下。</p><p><img src="/2022/03/02/sb-08/640-16462243467542.png" alt="图片"></p><p>事件的起因是腾讯的一段关于表彰高强度工作的文字。</p><p><img src="/2022/03/02/sb-08/640-16462243467543.jpeg" alt="图片"></p><p>随后，一名入职不久的腾讯员工在群里直接发出了如下文字。</p><p><img src="/2022/03/02/sb-08/640-16462243467544.jpeg" alt="图片"></p><p>相关知乎问题</p><p><a href="https://www.zhihu.com/question/513455529">https://www.zhihu.com/question/513455529</a>   （0126）</p><p><a href="https://www.zhihu.com/question/513499430">https://www.zhihu.com/question/513499430</a>   （0127）</p><p>腾讯员工关于声讨加班事件的说明文档</p><p><a href="https://www.kdocs.cn/view/l/cif8w8MrOa4z">https://www.kdocs.cn/view/l/cif8w8MrOa4z</a></p><h2 id="加班好像并不能提升公司业绩"><a href="#加班好像并不能提升公司业绩" class="headerlink" title="加班好像并不能提升公司业绩"></a><strong>加班好像并不能提升公司业绩</strong></h2><p><strong>当996成为常态，加班真的能够为公司带来应有的效益吗？</strong></p><p>高强度高压力下的工作带来的是效率低下、同样也会带来员工变着法的摸鱼。</p><p><strong>公司提倡996，我就带薪上厕所</strong>。</p><p><img src="/2022/03/02/sb-08/640-16462243467545.jpeg" alt="图片"></p><p>当然，公司也不会让你白白带薪上厕所，公司可能会出<strong>各种奇葩政策</strong>监测你的上厕所情况。</p><p>当然，也会让你<strong>上下班错乱</strong>，明明下班了，领导一句话你还得回来加班。</p><p><img src="/2022/03/02/sb-08/640-16462243467546.png" alt="图片"></p><p>这样所带来的结果只能是生活、工作分不开，不断压榨员工的剩余时间，不过公司的业绩又提升了多少呢？</p><p> <strong>996的诞生，每一个资本都在助推</strong>  </p><p>曾经的“马爸爸”提出，996是福报。</p><p>各家公司想着法延长员工的工作时长，有的公司加班到几点有免费晚餐，有的公司加班到几点可以免费打车。</p><p>总之，为了996，可以为员工提供更多福利。</p><p><img src="/2022/03/02/sb-08/640-16462243467547.png" alt="图片"></p><p>员工如果选择不要这些福利，那等待的可能就是HR的约谈。</p><p>其实员工也不敢不要这些福利，毕竟加点班、多拿点钱，可能就能早点住上房子。</p><p>996诞生于互联网大厂，互联网大厂所在地往往都是寸土寸金。<strong>如果不拼命，可能真的无法在这里生活。</strong>就像本次字节事件的员工，30年每月21000的房贷，如果他暂停一个月工作，那可能马上就要面临着放弃房子，也意味着放弃在北京生活。</p><p><img src="/2022/03/02/sb-08/640-16462243467548.png" alt="来源：知乎用户【望京一只妖】"></p><p>这次事件的腾讯员工曾在企业微信统计过国内企业的下班时间和周六日加班情况。</p><p><strong>只有24%的人能在6点前下班，40%的人周六加班、30%的人周日加班。</strong></p><p>考虑到企业微信的使用程度，国内企业的加班程度可想而知。</p><p><img src="/2022/03/02/sb-08/640-16462243467549.png" alt="图片"></p><h2 id="未来，高楼不再昼夜不停"><a href="#未来，高楼不再昼夜不停" class="headerlink" title="未来，高楼不再昼夜不停"></a><strong>未来，高楼不再昼夜不停</strong></h2><p>我们这一代人享受到了以前从未有过的科技发展带来的红利，当然也承担着以前从未有过的压力。</p><p>从高考的“一分超过一千人”到考研人数每年刷新记录再到找工作的各种卷，可能压力会长时间伴随着我们这代人。</p><p>《黑金》中G先生说：“<strong>一生当中就在玩这五个球</strong>：家庭、工作、健康、朋友和灵魂。五个球当中只有工作这个球是橡胶做的，砸下去还会弹起来，其他四个球是玻璃做的，砸碎了再也不会复原。”</p><p>不过现在的我们好像人生只有工作这一个球。回看腾讯员工的文字，有一段话是触目惊心的。</p><p><strong>25岁，毕业半年，脑出血。</strong></p><p><img src="/2022/03/02/sb-08/640-164622434675410.jpeg" alt="图片"></p><p>前段时间，也是腾讯，<a href="http://mp.weixin.qq.com/s?__biz=MzA4OTk0NDA0Nw==&mid=2654860462&idx=2&sn=9f5b6930442d65a83ec0394d77f4238d&chksm=8bda6e2ebcade7388f8d7943c5479c21d35a62a9a7aebe516ea00fb9f8dbb67430b73cfc51a5&scene=21#wechat_redirect">一位大佬意外离世</a>。</p><p>年轻人或许承担了太多的压力，或许我们把工作看得太重，又或许我们<strong>不得不</strong>把工作看得太重。</p><p>知乎网友 无夜的评论 让小冰瞬时绷不住了，<strong>40年前的放羊娃和如今大厂的码农</strong>好像并没有什么区别，甚至某种程度上不如放羊娃。</p><p><img src="/2022/03/02/sb-08/640-164622434675411.png" alt="图源知乎网友 无夜"></p><p><strong>世间的美好不止格子间的宏图伟业，还有一家三口的茶余饭后。</strong></p><p>所幸，面对加班，已经有了改变。</p><p><img src="/2022/03/02/sb-08/640-164622434675412.png" alt="图片"></p><p>不过路还很长。</p><p><img src="/2022/03/02/sb-08/640-164622434675513.png" alt="图片"></p><p>**多年以后<br>**</p><p><strong>也许我们会</strong></p><p><strong>伴着晚霞下班</strong></p><p>**夜间的星空<br>**</p><p><strong>会是我们饭后欣赏的美景</strong></p><p><strong>城市的高楼</strong></p><p><strong>也不再灯火通明、昼夜不停</strong></p><p><img src="/2022/03/02/sb-08/image-20220302204035325.png" alt="image-20220302204035325"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 八小时工作制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>愿我们跳出循环，心中不再有不甘</title>
      <link href="/2022/03/02/sb-kd/"/>
      <url>/2022/03/02/sb-kd/</url>
      
        <content type="html"><![CDATA[<p>文章首发于微信公众号 【国科大吃喝玩乐学】</p><p>这几天，又一部国产剧火了，那就是《开端》，情节精彩，设计巧妙，演员演技也到位，难得的好剧，推荐小果壳er们去看。</p><p><img src="/2022/03/02/sb-kd/640.png" alt="图片"></p><p>小冰在朋友的推荐下，一口气连刷了八集，并追完了小说的后半部分，当然也在凌晨赶完了本篇稿子。（绝不是因为看了第八集被吓得睡不着）</p><p>本文不想过多讨论影视情节，只谈谈小冰看后的想法。</p><p><strong>友情提示：本文包含轻微剧透。</strong></p><p>有人说《开端》是一部科幻剧，其实小冰倒觉得《开端》借助科幻<strong>展示了一个个鲜活而又真实的人，这些人就在我们周围，平凡而又普通，但又有着光芒</strong>。《开端》不仅仅情节精妙，还传达了一种价值观，这是我们现在多少影视剧所缺少的。</p><h2 id="人生或许就是一个循环接着一个循环"><a href="#人生或许就是一个循环接着一个循环" class="headerlink" title="人生或许就是一个循环接着一个循环"></a><strong>人生或许就是一个循环接着一个循环</strong></h2><p>李诗情和肖鹤云在《开端》中进入了一场交通事故的循环，他们反复循环，试图寻找着跳出循环的方式。</p><p>其实想想我们周围也在不断经历着循环，进入果壳的我们，突然感觉每一周过得好快。每天可能都重复着差不多的生活，三点一线，都是在实验室度过，并没有什么太大变化。</p><p>我们可能也会经历实验失败，一次次的重复，一次次的从头再来，一次次的循环。</p><p>我们也在寻找着跳出循环的方式，也在不断试着跳出循环，但一个循环的跳出可能迎接的是另一个循环，还更可能是更复杂的循环。</p><p><strong>人生或许就是一个循环接着一个循环</strong></p><h2 id="心有不甘，我愿再入循环"><a href="#心有不甘，我愿再入循环" class="headerlink" title="心有不甘，我愿再入循环"></a><strong>心有不甘，我愿再入循环</strong></h2><p>《开端》看下来，“<strong>再试一次</strong>”是小冰感触最深的一句话。</p><p><img src="/2022/03/02/sb-kd/640-16462244926781.png" alt="图片"></p><p>为了能多救一个人，李诗情拉下了肖鹤云。为了能救下一车人，李诗情和肖鹤云不断在尝试。</p><p>可能是宿命，可能是愧疚，但更多的可能是心中的善念，不甘让那一个个鲜活而又真实的人走向死亡。</p><p>就像那不断重复的实验，就像不断修改的代码，就像那日夜奋战的我们。</p><p>是什么让你不断再重复着实验，是什么让你通宵达旦？是不甘，是心中那脆弱而又挥之不去的梦。</p><p><strong>去吗 去啊 以最卑微的梦</strong></p><p><strong>战吗 战啊 以最孤高的梦</strong></p><p><strong>致那黑夜中的呜咽与怒吼</strong></p><p><strong>——《孤勇者》</strong></p><h2 id="直面循环的勇气"><a href="#直面循环的勇气" class="headerlink" title="直面循环的勇气"></a><strong>直面循环的勇气</strong></h2><p>肖鹤云在和李诗情争吵中说过 <strong>“</strong> <strong>善良不是廉价的美德，需要和能力相匹配。”</strong> 是的，一个大学生和一个初入职场的年轻人是不具备在那么短的时间里制服歹徒、拯救一车人的能力的。</p><p>当肖鹤云面对乘客对待他们的沉默、避之不及时说出了 “ <strong>不值得”</strong>，是啊，我们辛辛苦苦一次次循环就为了拯救你们，可你们却不再关键的时候伸手帮我们一把。</p><p><img src="/2022/03/02/sb-kd/640-16462244926782.png" alt="图片"></p><p>现实有时总是这样，你不知道如何面对，结果也会不尽如人意。但你还要 “<strong>再试一次</strong>”吗？你还有”<strong>再试一次</strong>“的勇气吗？</p><p>生活可能是一地鸡毛，我们只是被时代裹挟的普通人。我们是选择得过且过还是选择直面这一切继续努力。</p><p>特别喜欢B站UP主 <strong>啊sai在纽约</strong> 的一段话</p><p><strong>“勇敢的人，从不害怕生活里平凡的花絮，</strong></p><p><strong>他们认真地，在日复一日的琐碎里，活得用心且热烈。</strong></p><p><strong>于是花絮，才能剪出高光。</strong></p><p><strong>平凡的日子，才能变成金子。”</strong></p><p>**——*<em>啊sai在纽约*</em><br>**</p><p><strong>愿我们有直面循环的勇气！</strong></p><p><strong>愿我们跳出循环，心中不再有不甘！</strong></p><p>好了，小冰继续去追《开端》了。</p><p><img src="/2022/03/02/sb-kd/640-16462244926794.png" alt="图片"></p><p>本文图片来源于豆瓣</p><p><img src="/2022/03/02/sb-kd/image-20220302204009507.png" alt="image-20220302204009507"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 影视 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zotero教程—PC端文献与IPAD 同步</title>
      <link href="/2022/03/02/st-wx02/"/>
      <url>/2022/03/02/st-wx02/</url>
      
        <content type="html"><![CDATA[<p>之前小冰给果壳er们对比评测过相关文献管理软件的对比评测，对比下来，Zotero简约的设计、功能的可拓展性吸引了小冰，因此小冰决定使用Zotero作为文献管理软件。IPad作为文献阅读神器，一直深受使用者的热爱，但IPad端与PC端（Win）的文献同步一直困扰着不少用户。本次推送小冰就来讲解PC端文献和IPAD同步的实现。</p><p>Zotero与IPad同步实现是基于坚果云的同步、Zotfile插件的软链接进行实现。</p><h3 id="太长不看系列"><a href="#太长不看系列" class="headerlink" title="太长不看系列"></a>太长不看系列</h3><p><img src="/2022/03/02/st-wx02/v2-edf540e026d4a8097fd07fffbf311a20_r.jpg" alt="img"></p><p><strong>Zotero：</strong></p><p>编辑&gt;首选项&gt;高级&gt;文件和文件夹 <strong>链接附件的根目录</strong>设置为坚果云的同步文件夹。</p><p><strong>ZotFile插件</strong></p><p><strong>Zotero&gt;工具&gt;ZotFile Preferences&gt;General Settings</strong>中设置Location of FIles为上面设置的目录</p><p>坚果云授权PDF Expert，PDF Expert加入坚果云连接 或者直接使用PDFViewer查看坚果云文件</p><h2 id="1-准备阶段"><a href="#1-准备阶段" class="headerlink" title="1 准备阶段"></a>1 准备阶段</h2><ul><li><strong>坚果云</strong></li></ul><p><a href="https://www.jianguoyun.com/">坚果云官网</a></p><p>注册账号 ，PC端客户端 IPAD客户端（避免出现问题）下载安装</p><ul><li><strong>Zotero</strong> PC端客户端下载安装注册账号</li><li><strong>ZotFile插件</strong></li></ul><p><a href="http://zotfile.com/">Advanced PDF management for Zoterozotfile.com&#x2F;</a></p><p>PC端下载安装</p><ul><li><strong>PDF Expert</strong> IPad客户端免费版</li></ul><h2 id="2-Zotero设置"><a href="#2-Zotero设置" class="headerlink" title="2 Zotero设置"></a>2 Zotero设置</h2><h3 id="01-编辑-gt-首选项-gt-同步"><a href="#01-编辑-gt-首选项-gt-同步" class="headerlink" title="01 编辑&gt;首选项&gt;同步"></a>01 编辑&gt;首选项&gt;同步</h3><p><strong>确保文件同步都不勾选</strong></p><p><em>这里的文件指的是文献题录信息的附件，PDF、笔记等，本次同步借助ZotFile的软链接，无须借助Zotero自身的云空间和WebDev进行同步。同时Zotero的云空间只有300M的云空间，因此没有必要将PDF等文件存储到Zotero云空间。</em></p><p><img src="/2022/03/02/st-wx02/v2-d1e76039e2cf2c71eeb95d4fc45f075b_r.jpg" alt="img"></p><h3 id="02-编辑-gt-首选项-gt-高级-gt-文件和文件夹。"><a href="#02-编辑-gt-首选项-gt-高级-gt-文件和文件夹。" class="headerlink" title="02 编辑&gt;首选项&gt;高级&gt;文件和文件夹。"></a>02 编辑&gt;首选项&gt;高级&gt;文件和文件夹。</h3><p>这里需要设置一个文件目录：链接附件的根目录，<strong>链接附件的根目录</strong>要设置为坚果云的同步文件夹。</p><p><img src="/2022/03/02/st-wx02/v2-99ee13cece345650d54365d9d6f27c40_r.jpg" alt="img"></p><p>***链接附件的根目录***<em>是文献链接附件的实际位置，当Zotero寻找链接附件时，会将该目录作为根目录，直接在该目录下寻找。举个栗子，两台电脑、一个Zotero账号，分别设置了根目录，D:\附件目录 与D:\Data\附件目录，两个根目录不同，但Zotero寻找和保存链接附件时，会直接在根目录下寻找文件。现在你可能明白了，这个根目录的设置就是为了满足不同电脑之间的同步问题，避免找不到链接附件。</em></p><p><em>还有一点需要注意，链接附件和附件并不是一类，刚才仅仅设置的是链接附件的根目录。我们直接拖动到Zotero的文件是普通附件，链接附件的生成需要借助ZotFile插件。</em></p><p><img src="/2022/03/02/st-wx02/v2-b2b4be641ece228fd5ec9eddcab43af6_r.jpg" alt="img"></p><p><em>你可能还注意到有一个数据存储位置，这个文件夹里存储着Zotero的一些配置文件和数据等，同时所有题录文献的文件都在这个文件夹里的storage文件夹下。每一条Zotero都会创建一个随机文件夹，记录相关数据。</em></p><p><em>这个文件夹可以选择默认，也可以进行自定义，这个对同步不会有影响。由于Zotero会为每一条题目建一个文件夹，并对文件夹进行随机重命名，因此这样找起来文献会很麻烦，因此直接利用坚果云对该文件夹下的Storage文件夹同步并不现实。</em></p><p><img src="/2022/03/02/st-wx02/v2-d92ea0d2bbfe13bd1a13fb1eb970e01a_r.jpg" alt="img"></p><p><img src="/2022/03/02/st-wx02/v2-952090522a52b37cb62b3da3262126f6_r.jpg" alt="img"></p><h2 id="3-ZotFile-安装、使用"><a href="#3-ZotFile-安装、使用" class="headerlink" title="3 ZotFile 安装、使用"></a>3 ZotFile 安装、使用</h2><p>在ZotFile网站下载后会得到一个xpi文件，在Zotero中选择<strong>工具&gt;插件&gt;齿轮图标&gt;Install Add-on From FIle</strong>,选择下载的xpi文件，即可导入ZotFile插件完成安装。</p><p><img src="/2022/03/02/st-wx02/v2-eba82fd37b45fe6e7ae8a5e31a8cc24a_r.jpg" alt="img"></p><p>成功安装ZotFile插件后，在<strong>Zotero&gt;工具&gt;ZotFile Preferences&gt;General Settings</strong>中设置Location of FIles文件目录，这个文件目录要与之前设置的<strong>Zotero链接附件的根目录</strong>保持一致。同时也要注意，该文件目录需要是坚果云的同步文件夹。</p><p><img src="/2022/03/02/st-wx02/v2-4b2242cf3883c28fea50a5dd0581173b_r.jpg" alt="img"></p><p>上述配置完成后，选中文献条目（支持多选），<strong>右键&gt;Manage Attachments&gt;Rename Attachments</strong>，稍等片刻，在设置的文件夹中就出现了该条目的文献附件。如果此时打开了坚果云，即可将文献附件全部同步到云端。</p><p><img src="/2022/03/02/st-wx02/v2-590f019e183647761603ea14fb084285_720w.jpg" alt="img"></p><h3 id="文献探测"><a href="#文献探测" class="headerlink" title="文献探测"></a>文献探测</h3><p><em>可能果壳er们也注意到了ZotFile设置中General Settings中还有一个文件目录 Source Folder for Attaching New Files，当有新文件添加到这个文件夹里，就可以利用ZotFile插件的Attach New File功能将文件识别并进行同步。</em></p><p><img src="/2022/03/02/st-wx02/v2-ccc70761159bb86a5f3c6037aa4b0818_r.jpg" alt="img"></p><h3 id="子文件分类"><a href="#子文件分类" class="headerlink" title="子文件分类"></a>子文件分类</h3><p><em>如果想要将Zotero的文献利用ZotFile同步时按照Zotero界面中的文件夹层次同步，那么需要在General Settings中勾选Use subfolder defined by前的按钮，并在方框中填入</em> ***&#x2F;%c***<em>。</em></p><p><img src="/2022/03/02/st-wx02/v2-ac3a5a28ab03a10593af461437fb3ac0_r.jpg" alt="img"></p><h3 id="文件重命名格式"><a href="#文件重命名格式" class="headerlink" title="文件重命名格式"></a>文件重命名格式</h3><p><em>ZotFile对文件的重命名规则在ZotFile</em>***设置界面&gt;Renaming Rules***<em>中，如果没有特殊要求选择默认就好，也可以自己进行设置，设置界面有对符号的说明，更加详细的说明可以参照官网，小冰这里就不做过多讲解了。</em></p><p><img src="/2022/03/02/st-wx02/v2-c32810d2eac964c78262e59525fd1ed3_r.jpg" alt="img"></p><h2 id="4-PDF-Expert-与坚果云同步"><a href="#4-PDF-Expert-与坚果云同步" class="headerlink" title="4 PDF Expert 与坚果云同步"></a>4 PDF Expert 与坚果云同步</h2><p>通过上述设置，完成了PC端到云端的文献同步，接下来，完成IPad端到云端的同步。</p><p>如果你并没有对PDF Expert形成依赖，可以选择<strong>PDF Viewer</strong>软件直接访问坚果云文件，不必进行如下的配置，只需要在<strong>IPAD端下载安装PDF Viewer和坚果云两个软件即可。</strong></p><p><strong>以下为PDF Expert阅读坚果云文献的方法</strong></p><p>打开坚果云官网</p><p><a href="https://www.jianguoyun.com/d/home#/">坚果云免费个人网盘注册|个人云盘|网络存储盘www.jianguoyun.com/d/home#/</a></p><p>完成登录，右上角点击<strong>账户信息&gt;安全选项&gt;添加应用</strong>，名称按照自己的喜欢输入即可，点击生成密码，即可获得授权密码。</p><p><img src="/2022/03/02/st-wx02/v2-77d224090a47700e572090e32aae33cf_r.jpg" alt="img"></p><p>接下来在IPad端打开PDF Expert点击<strong>添加连接&gt;WebDAV</strong>，<strong>标题</strong>输入自己喜欢的名称，<strong>URL</strong>输入坚果云服务器地址，密码输入刚才坚果云网站生成的密码。</p><p><img src="/2022/03/02/st-wx02/v2-d7fd0b663ebbd70f830eb355b4c59d6e_r.jpg" alt="img"></p><p>如果遇到<strong>服务器连接</strong>问题，iPad可以 下载坚果云客户端并进行登录，重新添加应用并进行PDF Expert添加WebDAV。</p><p>添加成功后，恭喜你，你已经成功完成了PC端和IPad端的文献同步。只要有网络，IPad端就可以将PDF标注上传云端，PC端也可以随时查看标注信息。屏幕前的果壳er们快去尝试一下吧。</p><p>当然果壳er们也可以在IPad端选择其它PDF阅读器，前提是该应用支持WebDAV的添加，同样你也可以使用其它同步盘进行同步，不过国内还是坚果云比较方便。</p><h2 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5 注意事项"></a>5 注意事项</h2><p><strong>不要在IPad端点击同步</strong>。为了避免出现IPad端本地文件和PC端本地文件没有及时上传导致云端差别而发生错误的情况，建议IPad只在云端对PDF文件进行标注工作，即通过第三方应用程序（PDF Expert）的WebDAV入口直接查看PDF文件，没有必要点击文献设置中的同步按钮。</p><p>如果点击同步按钮，会将云端的文件下载到IPad本地，这样下次标注可能需要再次点击同步才能将修改的信息同步到云端，但如果PC端同时进行了修改，这样很可能会出现文件有差别而发生错误。</p><p><img src="/2022/03/02/st-wx02/v2-d4e1366e63885fdeab81de6e4a3e48d2_r.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献管理 </tag>
            
            <tag> 软件教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献管理软件对比——Endnote、Noteexpress、Zotero、Citavi</title>
      <link href="/2022/03/02/st-wx01/"/>
      <url>/2022/03/02/st-wx01/</url>
      
        <content type="html"><![CDATA[<h2 id="更多阅读"><a href="#更多阅读" class="headerlink" title="更多阅读"></a>更多阅读</h2><p>PC端与IPAD端文献同步教程</p><p><a href="https://zhuanlan.zhihu.com/p/443976799">be water：Zotero教程—PC端文献与IPAD 同步</a></p><p>中文文献识别教程</p><p><a href="https://zhuanlan.zhihu.com/p/435804495">果壳小冰：Zotero教程—中文文献识别</a></p><hr><p>最近在读文献，读得文献多了，发现急需一款文献管理软件。由于学校买了Endnote，所以就理所当然地选择了下载安装Endnote，但是体验一番之后，发现并不是那么好用。</p><p><strong>主要的槽点</strong>在于题录信息的识别，不能识别中文的也就算了，但是英文的也有很多不能识别，只能手动导入题录信息，那就还需要下载题录文件。这样一来，工作量明显加大了，不仅要下载文献pdf文件，还需要下载题录信息。</p><p>因此决定花费时间好好体验一下这些文献管理软件，寻找出适合自己的文献管理软件。</p><p>本次主要体验的软件有Endnote、Noteexpress、Zotero和Citvai，不要以为后面两个陌生就不好用，其实他俩才是真正的宝贝。在知乎、B站、软件官网等网站耗时两天终于对四款软件的核心功能有了了解，并亲自体验了一把。</p><p>下图就列出各个软件的优缺点，如果你也想要一款适合自己的文献管理软件，可以根据下图选择软件。</p><p><img src="/2022/03/02/st-wx01/v2-f87541c29c492fbdc158989824341830_r.jpg" alt="img"></p><p><img src="/2022/03/02/st-wx01/v2-d3f89a203a1619e1ffdbbec6de1408a1_r.jpg" alt="img"></p><p><strong>重要提示：</strong>本文较长，共5000字左右，完整阅读大概需要15min，如果时间有限可以先看图片，再看一下感兴趣的对应项目，精华都在图片上。</p><p>如果你已经使用习惯了一款文献管理软件，看完本文想要更换文献管理软件，<strong>请先衡量如下问题：</strong></p><ol><li>当前使用的软件能否满足写作要求？</li><li>更换软件后可能的效率提升能否抵消更换软件的学习成本？</li><li>想要更换的软件吸引你的功能是否会经常用到？</li></ol><p>请考虑清楚再决定是否更换软件，因为可能你觉得会带来的效率提升可能并不值得你花费那么大的学习成本，甚至你认为的效率提升的功能可能你只是偶尔会用到。</p><p>虽然花费了很长时间，但也仅仅体验了软件的部分功能，难免有所疏忽，欢迎大家批评指正。</p><hr><h2 id="1-Endnote"><a href="#1-Endnote" class="headerlink" title="1 Endnote"></a>1 Endnote</h2><p>Endnote依靠科睿唯安，有着庞大的用户量和知名度，科睿唯安旗下还有著名的WOS数据库，可以说Endnote是SCI的官方软件。本文评析主要基于Endnote20。</p><h3 id="1-1-界面设计"><a href="#1-1-界面设计" class="headerlink" title="1.1 界面设计"></a><strong>1.1 界面设计</strong></h3><p>用过x9的朋友都知道，Endnote界面设计并不是很好看，但是20更新之后，个人感觉更丑了。</p><p>可以看一下下面的X9和20的界面，可以看到20的字体变大了不少，设计更加趋于扁平化，同时将部分功能<strong>增加到了纵向</strong>，在横向上减少了不少功能设计。右边预览窗口在下方<strong>增加了</strong>导出文献的样式。<strong>修改题录的按钮需要在右上方点击Edit才能修改</strong>，相比以前<strong>麻烦了一点</strong>，不过<strong>设计者的想法可能是</strong>将有用的题录信息展示出来，没有用的加以隐藏。</p><p><img src="/2022/03/02/st-wx01/v2-fda0dbcf1c10b5051352118fad0f591b_r.jpg" alt="img"></p><p><img src="/2022/03/02/st-wx01/v2-67f914e5a43c3ee410b119e5babcc0c3_r.jpg" alt="img"></p><p><strong>整体的感觉就是20的设计字体大了不少，功能面板更加密集，配色对比比较强烈，如果熟悉了X9的用户不建议更新20。</strong></p><p><strong>一句话总结，20的设计看到了Endnote设计者想要变美的愿望，可惜在变美的路上走上了岔路口。</strong></p><h3 id="1-2-笔记与标签"><a href="#1-2-笔记与标签" class="headerlink" title="1.2 笔记与标签"></a><strong>1.2 笔记与标签</strong></h3><p>Endnote可以用自身pdf阅读器打开pdf文件，进行<strong>标注，高亮、下划线、删除线操作</strong>，同时Endnote<strong>搜索功能</strong>可以快速搜索pdf中标注的笔记。</p><p><img src="/2022/03/02/st-wx01/v2-73e998fa6020c8156d1e08e060df4037_r.jpg" alt="img"></p><p>当然还可以<strong>链接笔记文件</strong>，也可以在<strong>题录中添加笔记</strong>，但是题录的空间有限，做笔记不是很方便，只能做类似标签的笔记。当然Endnote也可以为文献添加标签。</p><h3 id="1-3-分组"><a href="#1-3-分组" class="headerlink" title="1.3 分组"></a><strong>1.3 分组</strong></h3><p>Endnote有两种分组方式，一种是普通分组，需要手动拖拽文献到相应的组别。还有一种是<strong>智能分组（Smart Group），可以根据标签、题目、作者等信息自动将文献分组</strong>，每次新添加一个文献，补充完整题录信息后，这篇文献就会被自动分到一个组别。不得不说，Endnote的这个功能<strong>很赞</strong>。</p><h3 id="1-4-题录识别"><a href="#1-4-题录识别" class="headerlink" title="1.4 题录识别"></a><strong>1.4 题录识别</strong></h3><p>选择了从<strong>cnki下载的两篇中文文献、WOS收录的三篇文献（在IEEE下载）、Sci-hub下载的三篇英文文献共8篇文献</strong>进行测试题录信息识别，Endnote的识别结果如下：</p><p>导入pdf文件后，只<strong>识别了三篇Wos文献，其它文件只有文件名。识别速度还是比较快</strong>。</p><p><img src="/2022/03/02/st-wx01/v2-85e96ee303ab652af1ffbdcc9a5a5499_r.jpg" alt="img"></p><p>操作支持<strong>多篇pdf文献拖拽导入</strong>，也可以选择Import 导入文件夹。</p><p>20210512更新，有评论说输入pdf文献的DOI信息进行题录更新即可识别，不过我用X9和20版本各试了一下中文文献，结果还是不能正确识别，也有可能是我的参数没有设置好。对于可以正确识别文章信息的条件见EndNote的官方回答。只有第一页有标准格式DOI的可编辑PDF文献才可以识别，可能还要加一个条件，英文文献。总之，个人认为EndNote对于中文文献不是很友好。</p><p><img src="/2022/03/02/st-wx01/v2-6d2d826080ff718cac51f25ba8047ffb_r.jpg" alt="img"></p><h3 id="1-5-题录添加"><a href="#1-5-题录添加" class="headerlink" title="1.5 题录添加"></a><strong>1.5 题录添加</strong></h3><p>对于Endnote识别不了pdf文件，可以去网站下载题录文件再导入就可以了。不过会新建一条文献，这就需要把之前导入的那条信息删除。（这里再<strong>吐槽一下20的删除</strong>，直接Delete已经删不掉了，还需要右键点击移到垃圾箱，额，麻烦）</p><p>各大网站都支持Endnote格式的题录信息，下载确实挺方便的，但是既下载pdf文件又下载题录信息的，还得把之前导入的pdf文件删除，有点麻烦啊。不过可以直接下载题录信息，然后再寻找pdf文件，这样确实就减少了工作量，但如果还需要pdf文件那还得多下载一次。</p><h3 id="1-6-浏览器插件"><a href="#1-6-浏览器插件" class="headerlink" title="1.6 浏览器插件"></a><strong>1.6 浏览器插件</strong></h3><p>Endnote有一<strong>款插件 Endnote Click 和一个网页按钮 “获取参考文献”。</strong>官方链接和图片介绍如下：</p><p><a href="https://www.myendnoteweb.com/EndNoteWeb.html?func=downloadInstallers&cat=download&">https://www.myendnoteweb.com/EndNoteWeb.html?func=downloadInstallers&cat=download&www.myendnoteweb.com/EndNoteWeb.html?func=downloadInstallers&cat=download&</a></p><p><img src="/2022/03/02/st-wx01/v2-c3caa30c488204cd45fc632826cd70f2_r.jpg" alt="img"></p><p>依次对插件和网页按钮进行了实验，结果如下：</p><p><strong>网页按钮</strong>在WOS上表现优秀，其它就识别得一塌糊涂，识别速度不是很快，还时不时需要重新登陆。</p><p><strong>Endnote Click</strong>除了WOS表现良好外，对于谷歌学术上的部分文献还可以进行下载阅读，当然这要感谢学校购买的数据库。</p><h3 id="1-7-书写软件支持"><a href="#1-7-书写软件支持" class="headerlink" title="1.7 书写软件支持"></a><strong>1.7 书写软件支持</strong></h3><p>在word中插入参考文献时，如果<strong>需要GB 7714的参考文献格式</strong>，由于Endnote自身不带这种格式，需要进行配置修改。</p><p>关于<strong>Latex与Endnote的联合使用</strong>中科院文献情况中心邵伟文老师还单独做了个PPT，需要的同学可以看一下：</p><p><a href="http://ir.las.ac.cn/handle/12502/3456">EndNote在LaTeX中的运用ir.las.ac.cn&#x2F;handle&#x2F;12502&#x2F;3456<img src="/2022/03/02/st-wx01/v2-3e2f209337abfb44c835cd7d40cda001_ipico.jpg" alt="img"></a></p><h3 id="1-8-同步"><a href="#1-8-同步" class="headerlink" title="1.8 同步"></a><strong>1.8 同步</strong></h3><p>之前实验的时候，可能由于Endnote20刚更新还不稳定。经评论区提醒，目前Endnote20正版同步功能使用起来不会出现太大问题，正版用户的存储空间为无限。</p><p><img src="/2022/03/02/st-wx01/v2-65359f6705f926af485b4b378647b173_r.jpg" alt="img"></p><p>以下为之前实验同步部分</p><p>试用了一下Endnote的同步功能，<strong>速度就是个玄学问题</strong>，有时候挺快，有时候很慢。有时候还会出现问题，有一次实验，直接把一个文献导入了几百次。</p><p>按照官网的介绍，这个同步是把其它设备的Library直接同步到新设备的一个Library，实验后发现也的确如此，不能按文件夹同步确实有点弊端。</p><p><img src="/2022/03/02/st-wx01/v2-b5cc8932dda5e343e2ca2b09d3e4d543_r.jpg" alt="img"></p><h3 id="1-9-在线搜索"><a href="#1-9-在线搜索" class="headerlink" title="1.9 在线搜索"></a><strong>1.9 在线搜索</strong></h3><p>Endnote软件支持在线搜索网络上数据库的文献进行添加，这点还是比较高效的，当然也只是在WOS平台上表现优秀，其它数据库就……</p><p><strong>一句话总结：Endnote是一款SCI的官方软件，对WOS数据库适配非常好。</strong></p><hr><h2 id="Noteexpress"><a href="#Noteexpress" class="headerlink" title="Noteexpress"></a>Noteexpress</h2><p>Noteexpress是一款国产软件，因此对于中文文献适配很好。本文基于Noteexpress v3.3.0版本进行实验</p><h3 id="2-1-界面设计"><a href="#2-1-界面设计" class="headerlink" title="2.1 界面设计"></a><strong>2.1 界面设计</strong></h3><p>中文界面，对于英文不好的我很友好。看完endnote20再看noteexpress，最大的感觉就是界面设计的呼吸感增加了不少，功能相对于Endnote也更加丰富。整体感觉的要比endnote看起来舒服一点。</p><p><img src="/2022/03/02/st-wx01/v2-945304cab9691efcf0a2414aa1f8d5d3_r.jpg" alt="img"></p><h3 id="2-2-笔记与标签"><a href="#2-2-笔记与标签" class="headerlink" title="2.2 笔记与标签"></a><strong>2.2 笔记与标签</strong></h3><p>Noteexpress的笔记功能比较强大，<strong>默认是一个小窗口</strong>，不过空间也比较充足，可以写下不少内容，也可以<strong>新建一个新窗口</strong>添加笔记。不过<strong>没有内置pdf阅读器</strong>。</p><p><img src="/2022/03/02/st-wx01/v2-b4ef7a6c4c1a1a1b8d48c4c96047a05b_r.jpg" alt="img"></p><p>Noteexpress单独在左下角的矩形框内显示添加的标签，点击相应的标签就可以看到对应的文献，类似endnote的分组。</p><p><img src="/2022/03/02/st-wx01/v2-cf33240b90d52742b4de72b3675fc2c6_r.jpg" alt="img"></p><h3 id="2-3-题录识别"><a href="#2-3-题录识别" class="headerlink" title="2.3 题录识别"></a><strong>2.3 题录识别</strong></h3><p>还是将上面的八篇文献导入Noteexpress中，遗憾的是Noteexpress一篇也没有成功识别。这点让我惊讶不已，经过一番搜索，发现Noteexpress对于文件名的要求比较高，必须是文章名，才可以正确识别。利用文件名进行搜索题录信息，这设计者属实有点偷懒啊。</p><p>最后重命名文件后，还是不能识别，为什么呢？最后找到了原因，原因是免费版支持智能更新功能。额，智能更新原来是用钱来买的。</p><p><img src="/2022/03/02/st-wx01/v2-f83a40caca2ee8b2d83b0728bc55bc76_r.jpg" alt="img"></p><p>最后通过其<strong>手动更新和自动更新</strong>将全部的题录信息更新完整的，Noteexpress提供的更新题录选项可以选择依据DOI、题目等进行更新，功能比较强大。在更新时发现使用<strong>北大那个数据库成功率会高一点</strong>。</p><p>操作方面的体验，相较Endnote可能更加人性化，如果题录信息不完整，导入文件后，需要右键点击更新（手动和自动更新）选择数据库才能更新完整，<strong>更新速度也稍慢，麻烦了一点</strong>。</p><p>noteexpress<strong>不仅可以识别pdf文件还可以识别caj文件</strong>，这点很赞。</p><p><img src="/2022/03/02/st-wx01/v2-2d8b5fa28054ede452bfc7b12e95cba4_r.jpg" alt="img"></p><p>导入文件时，有一个比较<strong>人性化的选项</strong>。endnote是直接把pdf文件复制，而noteexpress让自己选择是移动文件还是直接复制。</p><p><img src="/2022/03/02/st-wx01/v2-baed8ec4d86511be124e1401c4693909_r.jpg" alt="img"></p><p><strong>一句话总结</strong>，相比较Endnote多了一些人性化的功能，更新功能比较强大，一些好用的功能需要付费。</p><h3 id="2-4-浏览器插件"><a href="#2-4-浏览器插件" class="headerlink" title="2.4 浏览器插件"></a><strong>2.4 浏览器插件</strong></h3><p>Noteexpress提供了浏览器插件noteexpress网络捕手</p><p>官方链接：</p><p><a href="http://www.inoteexpress.com/wiki/index.php/NoteExpress%E7%BD%91%E7%BB%9C%E6%8D%95%E6%89%8B%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E">NoteExpress网络捕手安装使用说明 - NoteExpress知识库www.inoteexpress.com/wiki/index.php/NoteExpress%E7%BD%91%E7%BB%9C%E6%8D%95%E6%89%8B%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E<img src="https://pic4.zhimg.com/v2-ce44c2d0581a5a97d9900a50b0222fd3_180x120.jpg" alt="img"></a></p><p>使用后，发现这个插件功能很强大，<strong>支持百度学术、谷歌学术、WOS、cnki等几十个数据库</strong>，识别速度也很快，还支持<strong>批量导入</strong>。不过在百度学术和谷歌学术中虽然识别了文献信息，但是<strong>并不完整</strong>，只有文献题目和作者。</p><p>将noteexpress软件打开后，就可以将文献题录一键导入本地文件夹。这样导入题录信息就方便高效多了。</p><p><img src="/2022/03/02/st-wx01/v2-28315a56378278efaf908da02fde7701_r.jpg" alt="img"></p><h3 id="2-5-书写软件支持"><a href="#2-5-书写软件支持" class="headerlink" title="2.5 书写软件支持"></a><strong>2.5 书写软件支持</strong></h3><p>Noteexpress经典版还适配了<strong>WPS</strong>，就是不知道实际效果怎么样。Endnote虽然也可以在WPS中使用，但是使用效果却不是很好。</p><p><img src="/2022/03/02/st-wx01/v2-ca87e4d2a7b0d6983d22b9913e323c63_720w.jpg" alt="img"></p><p>在word中，noteexpress不仅可以插入参考文献，还可以<strong>插入笔记</strong>。</p><p>导出参考文献的<strong>样式比较少，自带GB7714</strong>，一些英文期刊需要进行更改。</p><p>不过插入文献的速<strong>度稍稍慢一点</strong>，尤其是检索引用的时候。</p><h3 id="2-6-特色"><a href="#2-6-特色" class="headerlink" title="2.6 特色"></a><strong>2.6 特色</strong></h3><p>Noteexpress还支持论文查重、数据备份、可视化数据分析等特色功能。</p><p>一句话总结，noteexpress被称为<strong>本土化最好的文献管理软件，功能丰富，浏览器插件体验很棒，如果付费体验更棒。</strong></p><hr><h2 id="Zotero"><a href="#Zotero" class="headerlink" title="Zotero"></a>Zotero</h2><p>Zotero是一款开源免费的软件，但是但是，<strong>免费云盘300MB空间</strong>，稍稍有点小，不过可以结合其它网盘使用。官网链接：</p><p><a href="https://www.zotero.org/">https://www.zotero.org/www.zotero.org/</a></p><h3 id="3-1-界面设计"><a href="#3-1-界面设计" class="headerlink" title="3.1 界面设计"></a><strong>3.1 界面设计</strong></h3><p>Zotero的界面设计深得我的喜爱，简约，<strong>简约的同时并没有缺少需要的功能</strong>。</p><p><img src="/2022/03/02/st-wx01/v2-0f3dfe73c959039f51558a6de54c33e1_r.jpg" alt="img"></p><h3 id="3-2-笔记与标签"><a href="#3-2-笔记与标签" class="headerlink" title="3.2 笔记与标签"></a><strong>3.2 笔记与标签</strong></h3><p>Zotero的笔记功能也很强大，与noteexpress类似，同时还支持对一条题录信息添加多条笔记文件，很赞</p><p><img src="/2022/03/02/st-wx01/v2-ed16eeb36f3542b882075e626b0a4da2_720w.jpg" alt="img"></p><p>Zotero的标签不仅可以手动添加，软件还根据题录信息<strong>自动建立标签</strong>，这个功能太赞了。</p><h3 id="3-3题录识别"><a href="#3-3题录识别" class="headerlink" title="3.3题录识别"></a><strong>3.3题录识别</strong></h3><p>还是将上述8篇文献导入zotero，zotero<strong>成功识别了全部的英文文献</strong>，题录信息也很完整。同时还自动根据领域添加了标签，很赞。识别速度也很快。</p><p>虽然原版的zotero不能识别中文文献，但是<strong>github上有很多关于zotero的插件</strong>，可以将识别中文文献的插件添加到zotero就可以了。</p><p><img src="/2022/03/02/st-wx01/v2-75ef99d98d9b593d64a4c13a5b485092_r.jpg" alt="img"></p><h3 id="3-4浏览器插件"><a href="#3-4浏览器插件" class="headerlink" title="3.4浏览器插件"></a><strong>3.4浏览器插件</strong></h3><p>Zotero也支持浏览器插件，其更像一款笔记插件<strong>，可以将任意网页保存到zotero中</strong>，也可以选择截图保存。</p><p>其题录识别功能比noteexpress插件稍逊一点， <strong>可以识别cnki题录信息，在百度学术和谷歌学术中同样题录信息的识别并不是很好。</strong></p><h3 id="3-5书写软件支持"><a href="#3-5书写软件支持" class="headerlink" title="3.5书写软件支持"></a><strong>3.5书写软件支持</strong></h3><p>Zotero在word中插入参考<strong>文献需要安装插件才可以正常使用，GB7714需要在样式管理器中选择加入。</strong></p><p>Zotero与其它文献管理不同的是插入参考文献需要<strong>两步操作</strong>，先在文中插入数字标号，最后再生成最后的参考文献，速度也很快。</p><p>Zotero除了word外还支持liberoffice、latex。</p><h3 id="3-6-同步"><a href="#3-6-同步" class="headerlink" title="3.6 同步"></a><strong>3.6 同步</strong></h3><p>网上有很多关于webdev网盘与zotero联合使用的教程，操作很容易，这样既不用担心网盘不够大，也可以方便不同设备之间的同步。不过有up主说坚果云同步时偶尔会出现问题，不过这方面没有进行实验。</p><p>同时zotero还可以在<strong>ipad上</strong>使用，不过需要进行简单配置一下。</p><h3 id="3-7-特色"><a href="#3-7-特色" class="headerlink" title="3.7 特色"></a><strong>3.7 特色</strong></h3><p>文件结构并不是数据库类型，而是大文件夹的形式，也是复制的pdf文件到一个新文件夹。</p><p>Zotero还<strong>支持安装插件</strong>，可以在Github上搜索就可以看到相关插件，这个功能很赞。</p><p><strong>一句话总结</strong>：zotero<strong>设计简约，功能齐全，可扩展性高。</strong></p><hr><h2 id="Citavi"><a href="#Citavi" class="headerlink" title="Citavi"></a>Citavi</h2><p>Citavi 是一个<strong>文献管理与知识组织</strong>软件，其不仅仅局限于文献管理，更方便知识管理，书写论文。其在官网挂上了多款文献管理软件功能的比较</p><p><a href="https://www.softhead-citavi.com/blog/2314">常用的几款文献管理软件 Citavi 、Mendely、Endnote、Refworks、Zotero、Papers 功能大比拼！哪个最好用？www.softhead-citavi.com/blog/2314<img src="https://pic1.zhimg.com/v2-88f26d6a741bfda348deec1021725150_180x120.jpg" alt="img"></a></p><p>从而可以看出其实力不容小视。官网链接：</p><p><a href="https://www.softhead-citavi.com/">Citavi（西塔维）中文网站丨文献管理与知识组织软件www.softhead-citavi.com/<img src="https://pic1.zhimg.com/v2-efe22dcdb1c6a6300b3e5d6be8bb6e14_ipico.jpg" alt="img"></a></p><p>免费空间每个project上限100条文献。</p><h3 id="4-1-界面设计"><a href="#4-1-界面设计" class="headerlink" title="4.1 界面设计"></a><strong>4.1 界面设计</strong></h3><p>citavi的界面就给人一种功能强大的感觉，事实也的确如此，可以看到在最左侧有一个类似<strong>论文大纲</strong>的界面，这也的确是citavi的特殊之处，可以将文献及其笔记链接到论文大纲，这样极大方便了论文的写作。</p><p><img src="/2022/03/02/st-wx01/v2-0eac0926ec3b5196d7034e7669b4ed00_r.jpg" alt="img"></p><h3 id="4-2-笔记与标签"><a href="#4-2-笔记与标签" class="headerlink" title="4.2 笔记与标签"></a><strong>4.2 笔记与标签</strong></h3><p>Citavi的笔记更像是<strong>思维导图</strong>，从左到右可以看到依次是论文大纲、文献题录、笔记、在pdf中的位置，由此就建立文献和论文的联系，方便论文的撰写。</p><p><img src="/2022/03/02/st-wx01/v2-5c00af951bbca9b738fb6adc24f63e1a_r.jpg" alt="img"></p><p>Citavi的标签也显示在界面左边栏，点击相应的图标就可以显示出来了，同样点击相应标签就可以显示对应的文献。</p><h3 id="4-3-题录识别"><a href="#4-3-题录识别" class="headerlink" title="4.3 题录识别"></a><strong>4.3 题录识别</strong></h3><p>八篇文献<strong>，一篇sci-hub和两篇cnki未成功识别，其余均成功识别</strong>。识别速度一般，不支持文件拖拽，只能使用文件导入。</p><h3 id="4-4-浏览器插件"><a href="#4-4-浏览器插件" class="headerlink" title="4.4 浏览器插件"></a><strong>4.4 浏览器插件</strong></h3><p>Citavi浏览器插件可以识别外文文献，<strong>在谷歌学术上准确率较高，但是在WOS平台上几乎失效</strong>。体验后，发现Citavi的操作速度有点慢。</p><h3 id="4-5-书写软件支持"><a href="#4-5-书写软件支持" class="headerlink" title="4.5 书写软件支持"></a><strong>4.5 书写软件支持</strong></h3><p>在word中可以<strong>直接导入citavi创建的大纲，并且可以添加文献笔记</strong>，这样就节省了很多时间，在阅读的同时就把论文写了，非常高效。</p><p>在word中的插件，会在<strong>侧边栏显示</strong>，方便选择引用的文献，速度也很快。</p><p>GB 7714样式需要选择添加</p><h3 id="4-6-特色与总结"><a href="#4-6-特色与总结" class="headerlink" title="4.6 特色与总结"></a><strong>4.6 特色与总结</strong></h3><p>Citavi左上方重要的三个按钮依次是<strong>参考文献、知识和任务，体现了citavi的三大核心功能：文献管理、知识组织和计划安排</strong>，后两个功能也是citavi区别于其它文献管理软件的功能。</p><p>Citavi功能丰富的同时也提高了学习成本，实话实说，虽花费了很长时间，也没有熟练掌握CItavi的核心功能，如果你能够肯花时间使用，必然是一款提高效率的利器。</p><p>同时可能是安装了ctiavi的全部功能，软件打开花费的时间较长，word加载插件的时间也较长。</p><p><strong>总结：</strong> 将文献扩展到知识，将管理迁移到论文撰写，鞭策使用者阅读的同时构思论文结构，一个project就是一篇论文架构，高效追求者的利器。可以说<strong>citavi就是文献管理、思维导图、时间规划三种功能的集成者。</strong></p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>耗时许久，终于到了结尾，上面四款软件可以说各有各的优势，但如果要给四款软件评分，相信大家心里肯定有杆秤。至于如何选择，大家按照自己的需求和使用情况和软件优势进行对比即可。当然还是开头提到的问题，如果你已经习惯了一款文献管理软件，如果想要更换一定要衡量好。</p><p>两天的时间，在网上查找教程并进行实验的同时，揣摩着设计者的思想并思考着使用者最需求的东西，一款好的软件应该是怎样的？</p><p><strong>个人认为，一款优秀的软件应该将绝大部分的权限提供给使用者，让使用者自己决定是否使用某个功能。就像搭积木一样，下载安装后应该是仅仅具备用户最需要的功能的软件，例如浏览器，打开软件后应该只有一个搜索框，如果使用者想要将常用网址加入，那么使用者可以在设置里手动添加。</strong> <strong>解决使用者最大需求的同时，将额外功能是否启用的决定权交给使用者，这才是一个优秀的软件。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 效率软件 </tag>
            
            <tag> 文献管理 </tag>
            
            <tag> 软件测评 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图解NatureDQN和Double DQN</title>
      <link href="/2022/03/02/ai-readpaper-dqn/"/>
      <url>/2022/03/02/ai-readpaper-dqn/</url>
      
        <content type="html"><![CDATA[<p>学习强化学习的过程中，作为渣渣的我觉得入门很难。尤其是算法实现并不像深度神经网络那样逻辑清晰且框架成熟。看了网上DQN的很多讲解只是觉得理解了主要原理，对于实现还是无从下手，在看过相关代码才有了思路。因此作为渣渣的我决定把自己对于相关算法的理解绘制成图记录下来，方便刚入门的小白学习。当然本人能力有限，难免有所错误，欢迎大佬们批评指正。</p><h2 id="部分符号说明"><a href="#部分符号说明" class="headerlink" title="部分符号说明"></a>部分符号说明</h2><p>done：本轮游戏是否结束</p><p>$\phi(s)$ : 表示状态s的特征，在本文中与s代表意义基本一致。</p><p>$s 、 s_t$:本文中均表示当前状态</p><p>s’、$s_{t+1}$:本文中均表示下一状态</p><p>a、 $a_t$ :本文中均表示当前状态选择的动作</p><p>a’、 $a_{t+1}$ :本文中均表示下一状态选择的动作</p><p>Q、PolicyNet：均表示策略网络</p><p>$\hat{Q}$ 、TargetNet：均表示目标网络</p><p>$\theta$ 表示策略网络的参数， $\theta^-$表示目标网络的参数</p><p><strong>方块表示标量</strong>，长条直角矩形表示向量，直角矩形表示表示矩阵。</p><p>需要注意的事，图中<strong>s和s’虽然用的方块</strong>，<strong>但其一般是向量或者矩阵</strong>，本文为了美观和与a、r、done的统一也表示成了方块。</p><h2 id="Nature-DQN"><a href="#Nature-DQN" class="headerlink" title="Nature DQN"></a>Nature DQN</h2><p>首先放出DQN2015[<a href="https://zhuanlan.zhihu.com/p/425843648#ref_1">1]</a>的伪代码</p><p><img src="/2022/03/02/ai-readpaper-dqn/v2-59c5e2680e4cb020e749927124187d1b_r.jpg" alt="图1"></p><p>代码实现可以参考Datawhale EasyRL[<a href="https://zhuanlan.zhihu.com/p/425843648#ref_2">2]</a>的实现，本文的图也是在理解了其相关教程[<a href="https://zhuanlan.zhihu.com/p/425843648#ref_3">3]</a>和代码的基础上做的。</p><p><strong>核心思想</strong>就是利用两个Q网络拟合Q-learning中的Q表，解决Q表难以处理连续状态的问题。<strong>难点</strong>就在于Q网络的参数更新，解决了Q网络的参数更新，就可以把Q网络看作Q表。</p><h3 id="与环境交互部分"><a href="#与环境交互部分" class="headerlink" title="与环境交互部分"></a>与环境交互部分</h3><p><img src="/2022/03/02/ai-readpaper-dqn/v2-1fe96711003b903166759c2bb79f91bc_r.jpg" alt="图2">PolicyNet对应于图1中的Q</p><p>以下对图2进行解释：</p><ol><li>输入状态s（注：s一般为向量或者矩阵，即$\phi(s)$) ，表示对于状态s的特征提取**）后，算法根据$\epsilon-greedy$ 策略选择动作a；</li><li>将s、a输入环境，得到下一步状态s’ 、奖励r 、是否结束标志done；</li><li>将$&lt;s,a,s’,r,done&gt;$存储到回放区Mermory中。</li><li>更新状态s。</li></ol><h3 id="ε-greedy策略-4"><a href="#ε-greedy策略-4" class="headerlink" title="ε-greedy策略**[4]"></a>ε-greedy策略**[<a href="https://zhuanlan.zhihu.com/p/425843648#ref_4">4]</a></h3><p>$\epsilon-greedy$策略即有$\epsilon$的概率采取随机策略，$1-\epsilon$ 概率选择贪婪策略，公式如下：<br>$$<br>\pi(a|s) &#x3D; \begin{cases} \epsilon&#x2F;m + 1-\epsilon \qquad if \; a^* &#x3D; argmax_{a\in A} Q(s,a)\\\\ \epsilon&#x2F;m \qquad otherwise \end{cases}\tag{1}<br>$$</p><p>其中 m为动作个数，<strong>推导过程</strong>如下：</p><p>如果采用随机策略，那么<br>$$<br>\pi_{rand}(a|s) &#x3D; 1&#x2F;m\tag{2}<br>$$</p><p>如果采用贪婪策略，那么<br>$$<br>\pi_{greedy}(a|s) &#x3D; \begin{cases}  1 \qquad if \; a^* &#x3D; argmax_{a\in A} Q(s,a)\\\\ 0 \qquad otherwise \end{cases}\tag{3}<br>$$</p><p>那么$\epsilon-greedy$策略为：<br>$$<br>\pi(a|s) &#x3D; (1-\epsilon)\cdot \pi_{greedy}(a|s) +\epsilon\cdot \pi_{rand}(a|s)\tag{4}<br>$$</p><p>将式（2）（3） 代入式（4）即可得到式（1）。</p><p><strong>具体实现</strong>：即给定一个随机数rand，如果随机数大于$\epsilon$,那么动作使用PolicyNet得到的q_v中的最大值对应的动作a，如果随机数小于 $\epsilon$,那么随机选择动作a。一般 $\epsilon$ 在训练过程中逐渐下降，即开始侧重于探索，最后侧重于利用。</p><p>从这里你也可以看出DQN算法适用于连续状态、离散动作的情况。</p><h3 id="网络更新部分"><a href="#网络更新部分" class="headerlink" title="网络更新部分"></a>网络更新部分</h3><p><img src="/2022/03/02/ai-readpaper-dqn/v2-ab967781e89c8681701f0a186ad9b97d_r.jpg" alt="图3"></p><ol><li>从回放区Mermory中随机抽取一个batch的$&lt;S,A,S’,R,DONE&gt;$；</li><li>将S、A给到PolicyNet，得到对应的估计Q值q_v。注意，只有S作为PolicyNet的输入，而A的作用在于在Policy的输出中找到对应A的q_v。步骤1、2对应图中蓝色的部分；</li><li>将S’给到TargetNet网络，得到Q_n_batch，对于每一个$s’\in S’$ ,在对应中的Q_n_batch中寻找最大的值，从而得到q_nv，即公式$max_{a’} \hat{Q}(\phi_{j+1},a’;\theta^-)$的实现。这部分对应图中黄色部分。</li><li>接下来是公式(5)的实现\</li></ol><p>$$<br>y_j &#x3D; \begin{cases} r_j \qquad if \; episode\; terminates\\\\ r_j+\gamma max_{a’} \hat{Q}(\phi_{j+1},a’;\theta)\qquad otherwise\end{cases}\tag{5}<br>$$</p><p>EasyRL用式（6）代替(5)式，实现上更加简单。<br>$$<br>y_j &#x3D;  r_j+\gamma max_{a’} \hat{Q}(\phi_{j+1},a’;\theta)(1-done)\tag{6}<br>$$</p><p>这部分的实现也就是红色的部分（不包括Loss），最终得到目标Q值q_t（ $y_j$ ）.</p><p>\5. 最后就是熟悉的计算Loss环节，利用反向传播对PolicyNet的参数进行更新。那么TargetNet的参数什么时候更新呢，当PolicyNet更新n次后将其参数直接拷贝到TargetNet中，n是我们设置的参数。这样就要求TargetNet与PolicyNet的结构完全一致。</p><h3 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h3><p><img src="/2022/03/02/ai-readpaper-dqn/v2-edd59af108f9c574f509c43dd3fa8666_r.jpg" alt="图4">图4</p><p>将图2和图3结合就得到了图4，为了美观，部分线条做了简化。图3呈现了完整的NatureDQN的训练流程。</p><h2 id="Double-DQN"><a href="#Double-DQN" class="headerlink" title="Double DQN"></a>Double DQN</h2><p>Double DQN[<a href="https://zhuanlan.zhihu.com/p/425843648#ref_5">5]</a>与Nature DQN的区别就一个公式：<br>$$<br>y_t^{DQN} \equiv R_{t+1} + \gamma max_a \hat{Q}(s_{t+1},a;\theta_t^-)\\\<br>y_t^{Double DQN} \equiv R_{t+1} + \gamma \hat{Q}(s_{t+1},argmax_a Q(s_{t+1},a;\theta_t);\theta_t^-)\<br>$$</p><p>Nature DQN对于状态$s_{t+1}$下的动作选择为，在TargetNet中的最大Q值对应的动作a，因此得到的Q值为$max_a \hat{Q}(s_{t+1},a;\theta_t^-)$；</p><p>DoubleDQN对于状态$s_{t+1}$下的动作选择为，在PolicyNet中最大Q值对应的动作a，因此得到的动作为 $a’&#x3D;argmax_a \hat{Q}(s_{t+1},a;\theta_t)$，那么对应的Q值为：<br>$$<br>\hat{Q}(s_{t+1},a’;\theta_t^-)&#x3D;\hat{Q}(s_{t+1},argmax_a \hat{Q}(s_{t+1},a;\theta_t);\theta_t^-)\tag{7}<br>$$</p><p>因此DoubleDQN的网络更新部分图如图5所示。</p><p><img src="/2022/03/02/ai-readpaper-dqn/v2-7a6570e91823614642031f0e93db4473_r.jpg" alt="img">图5</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/425843648#ref_1_0">^</a>DQN2015 <a href="https://web.stanford.edu/class/psych209/Readings/MnihEtAlHassibis15NatureControlDeepRL.pdf">https://web.stanford.edu/class/psych209/Readings/MnihEtAlHassibis15NatureControlDeepRL.pdf</a></li><li><a href="https://zhuanlan.zhihu.com/p/425843648#ref_2_0">^</a>Easy RL code <a href="https://github.com/datawhalechina/easy-rl/tree/master/codes/DQN">https://github.com/datawhalechina/easy-rl/tree/master/codes/DQN</a></li><li><a href="https://zhuanlan.zhihu.com/p/425843648#ref_3_0">^</a>EasyRL 教程 <a href="https://datawhalechina.github.io/easy-rl/#/chapter6/chapter6">https://datawhalechina.github.io/easy-rl/#/chapter6/chapter6</a></li><li><a href="https://zhuanlan.zhihu.com/p/425843648#ref_4_0">^</a>David DRL 第五讲笔记 叶强 <a href="https://zhuanlan.zhihu.com/p/28108498">https://zhuanlan.zhihu.com/p/28108498</a></li><li><a href="https://zhuanlan.zhihu.com/p/425843648#ref_5_0">^</a>Double DQN <a href="https://arxiv.org/abs/1509.06461">https://arxiv.org/abs/1509.06461</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> RL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown PPT | 如何自定义Marp主题</title>
      <link href="/2022/03/02/st-mappt02/"/>
      <url>/2022/03/02/st-mappt02/</url>
      
        <content type="html"><![CDATA[<p>之前展示了自定义的果壳PPT的Marp主题，这次给大家介绍如何自定义Marp主题。</p><p>Marp主题的自定义有两种方式：</p><ol><li>如果你只想对当前主题进行微小改动，可以直接在md文件中添加命令修改；</li><li>如果你想要大幅修改主题，需要编写CSS文件进行主题自定义。</li></ol><h2 id="1-md文件主题修改"><a href="#1-md文件主题修改" class="headerlink" title="1 md文件主题修改"></a>1 md文件主题修改</h2><h3 id="1-1-全局命令和局部命令"><a href="#1-1-全局命令和局部命令" class="headerlink" title="1.1 全局命令和局部命令"></a>1.1 全局命令和局部命令</h3><p>Marp的全局命令是指写在首页，作用于全部Slide的命令，局部命令是指作用于本页的指令。虽然官网的介绍是两者命令不同，但在实际使用过程中，发现其实两者唯一的区别是 是否具有下划线，例如：</p><pre class="line-numbers language-none"><code class="language-none">papaginate: true    &#x2F;&#x2F;表示Slide标页码_papaginate: false  &#x2F;&#x2F;表示本页Slide不标页码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>官网介绍的<strong>全局命令和局部命令</strong></p><p><img src="/2022/03/02/st-mappt02/v2-31be3538226e2e8f49ecbc5d15118240_720w.png" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt02/v2-a1ec245ea4a7d9c2d3b9f7bc0e68a507_720w.png" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><strong>全局命令使用</strong></p><pre class="line-numbers language-none"><code class="language-none">---marp: truetheme: gaiapaginate: true---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上面展示的那样，全局命令可以直接将命令写到分割线内</p><p><strong>局部命令使用</strong></p><pre class="line-numbers language-none"><code class="language-none">---&lt;!--_backgroundImage: url(&quot;.&#x2F;images&#x2F;bg1.jpg&quot;)_paginate: false --&gt;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上面的展示的那样，局部命令的生效，需要在命令两端添加 <!-- -->。同样如果只想让命令在本页生效，需要在命令前添加下划线。</p><h3 id="1-2-全局样式和局部样式"><a href="#1-2-全局样式和局部样式" class="headerlink" title="1.2 全局样式和局部样式"></a>1.2 全局样式和局部样式</h3><p>命令只能对Slide的小部分内容进行调整，如果想要对Slide的文字样式做出调整，那么就需要对全局样式和局部样式做出修改，支持CSS语法。</p><p><strong>全局样式修改</strong></p><pre class="line-numbers language-none"><code class="language-none">---marp: truetheme: gaiastyle: |  section &#123;    background-color: #ccc;  &#125;  h1 &#123;    text-align:left;  &#125;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>全局样式的修改是以 style 命令进行的，如上面展示的那样，我们可以在style命令中对样式进行相关修改。</p><p><strong>局部样式修改</strong></p><p>不过style命令并不支持下划线的局部命令，如果想要修改本页PPT的样式，需要以html的形式进行修改。</p><pre class="line-numbers language-none"><code class="language-none">&lt;style scoped&gt;    section &#123;  text-align: center;    &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-Markdown文件示例"><a href="#1-3-Markdown文件示例" class="headerlink" title="1.3 Markdown文件示例"></a>1.3 Markdown文件示例</h3><p>根据上面所述，我们可以得到生成的markdown文件示例如下：</p><pre class="line-numbers language-none"><code class="language-none">---marp: truetheme: UCASSimplepaginate: true---&lt;style scoped&gt;    section &#123;  text-align: center;    &#125;&lt;&#x2F;style&gt;&lt;!--_backgroundImage: url(&quot;.&#x2F;images&#x2F;bg1.jpg&quot;)_paginate: falsestyle:  --&gt;![img w:400px h:80px](.&#x2F;images&#x2F;logo.png)#  h1样式##  h2样式**BeWater****2021-12-10**---&lt;style scoped&gt;    section &#123;  text-align: center;    &#125;    h1 &#123;        color: rgb(60, 112, 198);        margin-bottom: 30px;    &#125;    h6 &#123;        text-align: center;    &#125;&lt;&#x2F;style&gt;&lt;!--_paginate: false --&gt;![bg left:45%](.&#x2F;images&#x2F;bg2.jpg)# 目 录###### 1 Slide 概述###### 2 文字展示###### 3 代码展示 ---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-CSS文件主题修改"><a href="#2-CSS文件主题修改" class="headerlink" title="2 CSS文件主题修改"></a>2 CSS文件主题修改</h2><p>如果你觉得上面的内容并不能满足你的需求，那你可能需要自定义CSS文件来改变Slide样式。</p><h3 id="2-1-CSS文件配置"><a href="#2-1-CSS文件配置" class="headerlink" title="2.1 CSS文件配置"></a>2.1 CSS文件配置</h3><p>如果想要使用自己的CSS主题文件，你首先需要在当前md文件夹下新建.vscode 文件夹，在该文件夹下新建settings.json文件，添加如下内容。</p><pre class="line-numbers language-none"><code class="language-none">&#123;    &quot;markdown.marp.themes&quot;: [      &quot;https:&#x2F;&#x2F;example.com&#x2F;foo&#x2F;bar&#x2F;custom-theme.css&quot;,      &quot;custom theme.css path&quot;,    ]  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>custom theme.css path  要添加自定义主题文件的路径，例如 .&#x2F;themes&#x2F;UCASSimple.css </p><h3 id="2-2-CSS文件内容"><a href="#2-2-CSS文件内容" class="headerlink" title="2.2 CSS文件内容"></a>2.2 CSS文件内容</h3><p>除去上面的文件，在CSS 文件头部需要添加 &#x2F;* @theme <custom theme name>*&#x2F; 来声明是这是一个Marp主题，这样在编写.md 文件时就可以借助 theme: <custom theme name> 使用自定义的主题了。</p><p> 随后CSS文件中需要利用@import  导入已有的主题文件，目前Marp官方有default gaia uncover 三款主题。</p><p>接着就可以编写CSS文件自定义主题了。</p><h3 id="2-3-CSS文件示例"><a href="#2-3-CSS文件示例" class="headerlink" title="2.3 CSS文件示例"></a>2.3 CSS文件示例</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;* @theme UCASSce *&#x2F;@charset &quot;UTF-8&quot;;@import &#39;uncover&#39;;section &#123;   font-size: 25px;   padding: 50px;   text-align: left;   font-family:Arial, Helvetica, sans-serif;   background:whitesmoke;  &#125;   h1 &#123;   text-align:left;   color: rgb(60, 112, 198);   margin-top: 150px;   margin-bottom: 0px;   font-size:72px;  &#125;  header &#123;    left: 50px;    right: 50px;    top: 10px;    height: 50px;    background-image: url(&quot;.&#x2F;images&#x2F;logo.png&quot;);     background-position: right top;    background-repeat: no-repeat;    background-size: 200px;    text-align:left;    color: rgb(60, 112, 198);    font-weight: bold;    font-size:36px;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考-amp-更多阅读"><a href="#参考-amp-更多阅读" class="headerlink" title="参考&amp; 更多阅读"></a>参考&amp; 更多阅读</h2><p><a href="https://marpit.marp.app/">Marp 官网教程</a></p><p><a href="https://caizhiyuan.gitee.io/categories/skills/20200730-marp.html">CAI Marp中文教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Markdown PPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Markdown写PPT ，Marp的果壳主题</title>
      <link href="/2022/03/02/st-mappt01/"/>
      <url>/2022/03/02/st-mappt01/</url>
      
        <content type="html"><![CDATA[<p>前段时间，一直有小果壳er们寻找Latex或者Markdown的PPT模板，小冰近期终于抽出时间赶出了一套基于Markdown的PPT模板。</p><p><strong>上图</strong></p><p>简约学术蓝风格</p><p><img src="/2022/03/02/st-mappt01/v2-e2db49b72ea7f77b965cae3516d9ed6f_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-df2970557ead1ad2d6df2639b57aecb5_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-5c69b40f41bd80f7b5a4e6ba3797178e_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-6048140d93314418d1958d6e9ea25ef7_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-5e1468af9442679bc0949171d302abbe_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-d6fad12f8bd25606f9e780ea6699bbc7_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-bc5d65927bdec29528e644863710f10e_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-e139d8cf65be410bfe14c883a978c90f_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p>风景风格</p><p><img src="/2022/03/02/st-mappt01/v2-41ee627e7bc0e477996f28e8586d92bc_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-22952ae75e62ea0a33c0f846935fcce1_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-c6b2783575e1a1e79b8d487e154ea05e_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p><img src="/2022/03/02/st-mappt01/v2-eee9ddf19e9e596e6000dd101c6839f2_720w.jpg" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p>上面两套PPT均基于<strong>VSCode插件Marp</strong> 编辑而成，能够满足日常汇报PPT需求，<strong>同时公式、代码编辑比Office排版美观</strong>。</p><h2 id="Marp介绍"><a href="#Marp介绍" class="headerlink" title="Marp介绍"></a><strong>Marp介绍</strong></h2><p>Marp官网：</p><p>Marp: Markdown Presentation Ecosystemmarp.app<img src="/2022/03/02/st-mappt01/v2-0eabba0d7ed4c14d58f78f56f5e5e31d_180x120.jpg" alt="图标"></p><p>Marp是一款基于markdown开发的PPT软件，让我们专注于PPT的内容，而不再花费过多的时间排版，当然，其并不能像Office那样高自由度的排版，但满足日常汇报足够。</p><p>目前Marp已有单独的软件和VsCode插件，小冰使用的是VScode插件。</p><h2 id="Marp安装与使用"><a href="#Marp安装与使用" class="headerlink" title="Marp安装与使用"></a><strong>Marp安装与使用</strong></h2><p>打开VsCode 的扩展主题 搜索 Marp即可进行安装。</p><p>Marp使用也非常简单，其利用markdown的分隔符对PPT进行分页。</p><p>举个栗子</p><pre class="line-numbers language-none"><code class="language-none">---marp: truetheme: gaiapaginate: true---# 汇报题目 h1样式## 副标题 h2样式**BeWater****2021-12-10**---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码生成的PPT如下</p><p><img src="/2022/03/02/st-mappt01/v2-ea454b30012d831aecd2f357ce866dde_720w.png" alt="img"></p><p>编辑切换为居中</p><p>添加图片注释，不超过 140 字（可选）</p><p>相关语法可以参考CAI的博客 </p><p>marp Markdown演示编写器 | CAIcaizhiyuan.gitee.io<img src="/2022/03/02/st-mappt01/v2-88b8598c2de8ad4d9d5205dc847a2f29_ipico.jpg" alt="图标"></p><p>如果需要导出PDF、PPT等格式文件，只需要点击左上角的按钮，选择Export即可，但导出的PPT是图片，并不能进行编辑。</p><p><img src="/2022/03/02/st-mappt01/v2-537fcfa5f937e00cdbcaf6ce4af95b52_720w.png" alt="img"></p><p>编辑</p><p>添加图片注释，不超过 140 字（可选）</p><h2 id="UCAS主题"><a href="#UCAS主题" class="headerlink" title="UCAS主题"></a><strong>UCAS主题</strong></h2><p>Marp官方只提供了default gaia uncover 三款主题，并不能完全满足我们的日常使用。</p><p>我们可以通过css文件自定义主题进行使用，开头展示的PPT就是小冰自定义的主题。如果你觉得这两个主题完全够用，你可以直接安装这两个主题进行使用，logo可以进行替换。</p><p>github链接：</p><p><a href="https://github.com/BeWaterMyFriend7/Marp-Theme-UCASgithub.com">https://github.com/BeWaterMyFriend7/Marp-Theme-UCASgithub.com</a></p><p>如果访问github不方便，可以后台回复 <strong>Marp</strong> 获取压缩包。</p><p>下载之后,在Vscode成功安装了Marp的基础上，你可以利用Vscode打开该文件夹，直接修改.md文件生成自己的PPT文件即可。</p><p>在使用主题之前，建议<strong>先看一下生成的PDF文件暨主题介绍文件</strong>。</p><h2 id="主题介绍"><a href="#主题介绍" class="headerlink" title="主题介绍"></a><strong>主题介绍</strong></h2><p>小冰自定义了两款Marp主题 UCASSimple 简约蓝色块和 UCASSce 果壳风景主题，其实两款主题基本一样，只是首尾页和目录页进行了微小改动。两款主题对应的md文件分别是SimpleBlue.md，Scenery.md，对应的pdf文件是.&#x2F;doc&#x2F;SimpleBlue.pdf，.&#x2F;doc&#x2F;Scenery.pdf</p><p>文件结构如下：</p><pre class="line-numbers language-none"><code class="language-none">Marp  |__ .vscode  |     |__settings.json   &#x2F;&#x2F;主题配置文件  |__ doc  |     |__Scenery        &#x2F;&#x2F;Scenery.md 生成的PPT图片  |     |__SimpleBlue     &#x2F;&#x2F;SimpleBLue.md 生成的PPT图片  |     |__Scenery.pdf    &#x2F;&#x2F;Scenery.md 导出的Pdf  |     |__SimpleBlue.pdf &#x2F;&#x2F;SimpleBlue.md 导出的Pdf  |__ images              &#x2F;&#x2F;文稿和主题所用到的图片文件 可对背景和logo进行替换  |__ themes  |     |__UCASSce.css    &#x2F;&#x2F;UCASSce主题文件  |     |__UCASSimple.css &#x2F;&#x2F;UCASSimple主题文件  |__Scenery.md           &#x2F;&#x2F;UCASSce主题对应的md文件  |__SimpleBlue.md        &#x2F;&#x2F;UCASSimple主题对应的md文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="md文件介绍"><a href="#md文件介绍" class="headerlink" title="md文件介绍"></a><strong>md文件介绍</strong></h2><p>以下简单介绍以下Scenery.md文件，方便果壳er使用。</p><p>首先是Marp主题的选择和部分全局命令。</p><pre class="line-numbers language-none"><code class="language-none">---marp: truetheme: UCASScepaginate: true---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来是<strong>首页内容</strong> <!-- _paginate:false -->表示本页PPT不标页码，是局部命令。 为了调整文字和背景图片，小冰在正式文字前加了很多空行。</p><p>如你所见，首尾页图片背景是直接使用PPT绘制了一整张图片作为背景进行实现的，UCASSimple主题也是这样实现的，并不是插入图片调整图片位置和大小实现的，因此如果你想要更换背景，需要利用PPT做一张16:9的背景图片进行替换。</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--_paginate: false--&gt;![bg vertical w:1300px](images&#x2F;bg3.jpg)&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;# 汇报题目 h1样式## 副标题 h2样式**BeWater  2021-12-10**---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>目录页</strong>：<style scoped>…</style> 是局部样式调整，目录的各个小标题采用h6样式，全套PPT仅有目录页使用了h6样式。</p><pre class="line-numbers language-none"><code class="language-none">&lt;style scoped&gt;    section &#123;  text-align: center;    &#125;    h1 &#123;        color: rgb(60, 112, 198);        margin-bottom: 30px;    &#125;    h6 &#123;        text-align: center;    &#125;&lt;&#x2F;style&gt;&lt;!--_paginate: false --&gt;![bg left:55% ](.&#x2F;images&#x2F;bg5.jpg)# 目 录###### 1 Slide 概述###### 2 文字展示###### 3 代码展示###### 4 公式展示###### 5 表格展示###### 6 图片展示###### 7 其它展示###### 8 参考文献&amp;引用展示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>正式内容页</strong>:<!-- _header: 1 Slide概述 --> 是PPT的最上方标题栏的实现，文字内容需要根据实际情况进行调整。</p><pre class="line-numbers language-none"><code class="language-none">&lt;!-- _header: 1 Slide概述 --&gt;本PPT借助插件Vscode插件Marp书写而成，由markdown文档编辑，方便公式和代码的展示与排版。**环境：**- 系统：Win10- 软件：VsCode 插件：Marp- theme：自定义主题 UCASSce ，基于官方uncover主题修改  **特征：**- 背景选用果壳风景，每页上方标题栏基于Marp header格式进行修改而成。- 首尾页和目录页图片基于背景得到，首尾页可根据文字内容在本页修改标题样式，目录页可根据文字内容对图片进行大小位置调整<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>小冰对CSS和一些前端知识并不是很熟悉，只是现学现用，编码难免有所不妥，还望见谅~同时欢迎熟悉前端的大佬对主题提出修改意见</strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Markdown PPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摆脱Windows搜索工具困扰，本地文件搜索神器 Everything Listary对比</title>
      <link href="/2022/03/02/st-everything/"/>
      <url>/2022/03/02/st-everything/</url>
      
        <content type="html"><![CDATA[<p>相信果壳er们都体验过Windows系统自带的文件搜索工具，那速度真是一言难尽。本次推送小冰为大家带来两款神器——Everything和 Listary，可以完美解决文件搜索慢的问题，提高搜索速度。</p><h2 id="太长不看系列"><a href="#太长不看系列" class="headerlink" title="太长不看系列"></a><strong>太长不看系列</strong></h2><p><img src="/2022/03/02/st-everything/v2-feebeaf7a312a204110be4fa119bc1ab_r.jpg" alt="img"></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a><strong>概述</strong></h2><p>其实，严格来说，Listary和Everything并不是同一类型的软件，虽然二者最大的特色都是本地文件的快速搜索，但Listary更侧重于<strong>与其它软件结合使用进行文件定位</strong>，Everything更侧重于<strong>单独使用的文件筛选查看。</strong></p><p>Everything官网：</p><p><a href="https://www.voidtools.com/zh-cn/">voidtoolswww.voidtools.com/zh-cn/<img src="https://pic3.zhimg.com/v2-a3c4822709cc14a58600a52c2bdfaec2_180x120.jpg" alt="img"></a></p><p><img src="/2022/03/02/st-everything/v2-327a71558787440d0d045dbe4d4ba2ab_r.jpg" alt="img"></p><p>Listary官网：</p><p><a href="https://www.listary.com/">https://www.listary.com/www.listary.com/</a></p><p><img src="/2022/03/02/st-everything/v2-5b5bcc53b100b07d82ee1d26ef252075_r.jpg" alt="img"></p><h3 id="Listary-版本主要区别"><a href="#Listary-版本主要区别" class="headerlink" title="Listary 版本主要区别"></a><strong>Listary 版本主要区别</strong></h3><p>Listary目前有两个版本，免费版本(v5.0) 和 专业版本(v6.0),付费版本大约20美元。小冰综合使用体验来看，其实两个版本的差别不是很大，免费版本基本可以满足日常使用。</p><p><img src="/2022/03/02/st-everything/v2-1cf47f287ce0ec950351eedf83073cf1_r.jpg" alt="img"></p><p>根据**官网[1]**介绍，二者主要差别如下：</p><ul><li>专业版本的UI设计更加美观</li><li>专业版本支持插件，自带计算器和词典功能</li><li>专业版本优化了文件搜索引擎，可以展示父文件路径</li></ul><p>本文主要以Listary v5.0版本为主对Listary相关功能进行展示。部分专业版功能采用的是v6.0.5.16版本进行测试，可能时效性较差。</p><p>相关软件可以在官网下载体验，也可以后台回复 <strong>“文件搜索”</strong> 获得所有安装包。</p><h2 id="文件搜索体验对比"><a href="#文件搜索体验对比" class="headerlink" title="文件搜索体验对比"></a><strong>文件搜索体验对比</strong></h2><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a><strong>简单使用</strong></h3><p>Listary的启动方式是 <strong>双击Ctrl</strong> ，方便快捷。</p><p>Listary启动后，仅仅显示一个搜索框</p><p><img src="/2022/03/02/st-everything/v2-5d416c72fc7cc95dd47754f3f8d61b9c_r.jpg" alt="img"></p><p><img src="/2022/03/02/st-everything/v2-fde08b19e2e61fd66cc39fe88b797e1d_r.jpg" alt="img"></p><p>Listary搜索完成，展示结果后，可以通过<strong>鼠标直接点击</strong>进入相应文件，也可以使用<strong>方向键+回车</strong>进入相应文件。LIstary v6.0支持使用<strong>Ctrl+数字键</strong>进入相应文件。</p><p><img src="/2022/03/02/st-everything/v2-fdef5e1736f8c81d0ae5f7a7bc00e5b3_r.jpg" alt="img">Listary 5.0 搜索文件结果展示</p><p><img src="/2022/03/02/st-everything/v2-dbce4ec8489f2bb8be0b79a8734e955c_r.jpg" alt="img">Listary v6.0 搜索结果界面</p><p>Everything的启动快捷键需要用户自己设置。（Everything 界面 <strong>工具&gt;选项&gt;快捷键&gt;显示窗口快捷键</strong> ）</p><p><img src="/2022/03/02/st-everything/v2-7c4eb111446ec372f1e4ab09696cc0c2_r.jpg" alt="img"></p><p>Everything启动后，除了显示文件搜索框还会显示磁盘下的文件及文件信息。如果想要进入相应文件，Everything需要<strong>双击鼠标</strong>或者使用<strong>方向键+回车</strong>。</p><p><img src="/2022/03/02/st-everything/v2-4b9b8d219e684961713bfb24c990ca83_r.jpg" alt="img"></p><p>Everything不仅仅可以展示搜索的文件，还可以根据文件信息对文件进行排序，如果我们需要查找一个只知道模糊名称的文件或者需要查找多个文件，这个功能还是比较适合的。</p><h3 id="搜索结果对比"><a href="#搜索结果对比" class="headerlink" title="搜索结果对比"></a><strong>搜索结果对比</strong></h3><p>为了对比Listary和Everything的搜索功能，本文从文件名搜索、文件格式搜索、筛选等几个方面对搜索结果进行展示。</p><ol><li>文件名搜索</li></ol><p>同时在Everything和Listary的搜索框中键入 <strong>“12345”</strong>，可以看到得到的搜索结果均为30个。</p><p><img src="/2022/03/02/st-everything/v2-bd449fe7b8bd973c020685edfcae40e2_r.jpg" alt="img"></p><ol><li>文件格式后缀搜索</li></ol><p>直接在搜索框中键入 <strong>“.docx”</strong> 的结果如下：</p><p><img src="/2022/03/02/st-everything/v2-4b00e716f02a4db039f64dabff0fe464_r.jpg" alt="img"></p><p>3.应用程序搜索</p><p>在搜索框中键入 <strong>“微信”</strong> 的结果如下：</p><p><img src="/2022/03/02/st-everything/v2-72021d693dba00b8dfa8a440c635ef7e_r.jpg" alt="img"></p><p>4.筛选器</p><p>在搜索框中键入 <strong>“doc:图”</strong> 的结果如下：</p><p><img src="/2022/03/02/st-everything/v2-10550baa05536c673bdae55b9dcfffe0_r.jpg" alt="img"></p><p>其中<code>doc:</code> 表示只查看文档。Everything除了可以使用前缀进行筛选，在搜索框的右侧也可以选择查看相应的文件类型。</p><p><img src="/2022/03/02/st-everything/v2-5ed774efe779b58523653a5d2dc5670a_r.jpg" alt="img"></p><p>两者的筛选器略有区别，但均可自定义。</p><p><img src="/2022/03/02/st-everything/v2-fa9a77cb3d2a095f83161823c565e28a_r.jpg" alt="img"></p><p><img src="/2022/03/02/st-everything/v2-e50f368f62d36f31ca79181bdc8a608e_r.jpg" alt="img"></p><p>5.逻辑规则&amp;高级搜索</p><p>在搜索框中键入 <strong>“00 doc”</strong> 的结果如下：</p><p><img src="/2022/03/02/st-everything/v2-653a123e998681e5ad973f809597f0fd_r.jpg" alt="img"></p><p>除去简单的与逻辑规则外，Everything还支持 <strong>高级搜索 和正则表达式</strong>。</p><p><img src="/2022/03/02/st-everything/v2-5ff6d7b2a84346a17528b044db6e11fe_r.jpg" alt="img"></p><p>Everything的相关搜索语法可以在<strong>帮助&gt;搜索语法 以及 正则表达式语法中查看。</strong></p><p><img src="/2022/03/02/st-everything/v2-2e86ed1b5b31d59a0686228ad71cc653_720w.jpg" alt="img"></p><h3 id="对文件进行操作"><a href="#对文件进行操作" class="headerlink" title="对文件进行操作"></a><strong>对文件进行操作</strong></h3><p>Everything 搜索后显示的文件，你可以进行<strong>全选、反选</strong>操作，当然你也可以借助<code>Shift</code> 和 <code>Ctrl</code> 键进行<strong>多选</strong>，也可以进行<strong>复制、移动、删除</strong>等操作。</p><p><img src="/2022/03/02/st-everything/v2-e0bf3122f7f61cfb51cb31cb4b180ce9_720w.jpg" alt="img"></p><p>Listary同样支持对文件进行<strong>复制、剪切</strong>动作，但不支持其它动作</p><p>Everything除了可以进行文件详细信息的界面展示，还可以进行图标展示。</p><p><img src="/2022/03/02/st-everything/v2-b1b696812c0405eacdbbea39737e7074_r.jpg" alt="img"></p><p>如果你想要了解更多关于Everything的内容，可以在 **Everything帮助界面 [2]**查看。</p><h2 id="Listary特色功能"><a href="#Listary特色功能" class="headerlink" title="Listary特色功能"></a><strong>Listary特色功能</strong></h2><h3 id="与其它软件结合使用"><a href="#与其它软件结合使用" class="headerlink" title="与其它软件结合使用"></a><strong>与其它软件结合使用</strong></h3><p>Listary的另一个实用功能是可以与其它软件结合使用。我们常常会遇到这样的场景——<strong>另存为</strong>，如果文件路径需要手动一点点切换是不是比较麻烦，此时我们完全可以借助Listary快速定位。</p><p>如果你的电脑启动了Listary，在另存为弹窗的下方会出现一个Listary的搜索框，在这里输入相关路径信息即可实现快速定位。</p><p><img src="/2022/03/02/st-everything/v2-067e0f66623ff3ddca4ff5184120db2f_r.jpg" alt="img"></p><p><img src="/2022/03/02/st-everything/v2-b6f32f4e15c83039cb22cdabcae6ce55_r.jpg" alt="img"></p><p>同样的场景也会出现在 <strong>寻找打开文件</strong>页面。</p><h3 id="网络搜索"><a href="#网络搜索" class="headerlink" title="网络搜索"></a><strong>网络搜索</strong></h3><p>Listary支持网络搜索，例如，如果想要使用百度搜索 <strong>UCAS</strong> ，只需要在Listary搜索框中 键入<strong>bd+空格+UCAS</strong>，随后回车即可跳转到浏览器页面。（v6.0版本为 <strong>b+空格+UCAS</strong>）</p><p><img src="/2022/03/02/st-everything/v2-0b6ec90d9b231c36d7b4978866853af5_r.jpg" alt="img"></p><p>Listary同样支持其它搜索引擎进行网络搜索。</p><p><img src="/2022/03/02/st-everything/v2-8b0f2399af7b6e344570fc46319e598f_r.jpg" alt="img"></p><p>同样你也可以对搜索引擎进行自定义设置，小冰这里展示了知乎的设置方法。</p><p><img src="/2022/03/02/st-everything/v2-1ed20e787e7b3fff9bc2334ed0a2be89_r.jpg" alt="img"></p><p>如果想要使用知乎搜索内容，只需要在Listary搜索框中键入 <strong>‘zh+空格+搜索内容’</strong> 即可。</p><p>Listary网页搜索设置方法。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">关键字：搜索框中的简称，自定义，小冰这里定义知乎为zh显示名称：自定义URL：在网站中搜索之后的链接去除关键词+｛query｝<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="自定义目录"><a href="#自定义目录" class="headerlink" title="自定义目录"></a><strong>自定义目录</strong></h3><p>在 <strong>Listary选项&gt;关键字&gt;目录</strong> 中可以自定义常用文件夹的目录关键字，这样就可以像网络搜索一样，只搜索该目录下的文件。</p><p><img src="/2022/03/02/st-everything/v2-29d03d3c335d3706a75fe4522a34cfd3_r.jpg" alt="img"></p><h3 id="收藏目录"><a href="#收藏目录" class="headerlink" title="收藏目录"></a><strong>收藏目录</strong></h3><p>在 <strong>桌面空白处或者文件资源管理器空白处双击鼠标左键</strong> 即可以看到Listary的收藏页面，我们可以将常用文件目录收藏，这样就可以快速定位到文件目录。</p><p><img src="/2022/03/02/st-everything/v2-e390ec881812ab3a1d87bc26017ff37d_720w.jpg" alt="img"></p><p>将文件目录添加到收藏的方法十分简单，只需要在刚才的Listary页面中点击添加，确认文件目录后点击确定即可。</p><p><img src="/2022/03/02/st-everything/v2-c4fc42a2a68a0f9827c4e52ac4634b8d_720w.jpg" alt="img"></p><h3 id="专业版的插件"><a href="#专业版的插件" class="headerlink" title="专业版的插件"></a><strong>专业版的插件</strong></h3><p>Listary的专业版具备插件功能，官方自带计算器和谷歌翻译两个插件。</p><p><img src="/2022/03/02/st-everything/v2-b3223332b8b86e6df4f6ef3a36969f2b_r.jpg" alt="img"></p><p>计算器的功能展示如下：只需要在Listary的搜索框中键入公式即可获得答案。</p><p><img src="/2022/03/02/st-everything/v2-174d67f36af32254369b9f04daad05c3_r.jpg" alt="img"></p><h3 id="Listary更多内容阅读"><a href="#Listary更多内容阅读" class="headerlink" title="Listary更多内容阅读"></a><strong>Listary更多内容阅读</strong></h3><p><strong>Listary 插件开发指南[3]</strong><br><a href="https://discussion.listary.com/t/listary/6127">https://discussion.listary.com/t/listary/6127</a></p><p><strong>Listary 官方文档[4]</strong><br><a href="https://www.listary.com/docs">https://www.listary.com/docs</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>通过上面的软件功能对比，相信屏幕前的果壳er应该对两个软件有了更加深刻的认识，<strong>Listary更侧重文件定位，Everything更侧重于文件搜索和操作</strong>。</p><p>二者适用于不同的应用场景：</p><p><strong>知晓文件名称中具体包含的字词且该字词相对于其它文件名称比较唯一</strong>，适合使用Listary，其实这也基本囊括了我们日常使用的大部分场景。</p><p><strong>知晓文件的模糊名称</strong>，适合使用Everything，利用Everything查找到相近文件，随后按照规则进行排序寻找到目标文件。</p><p>如何极大地利用一款优秀软件的价值？小冰认为不能仅仅停留在软件功能的本身，要将软件融入到日常习惯或者说改变之前的低效行为或者方式。果壳er们是否想过，这两款软件能否提高我们的文件管理效率？</p><p>挖个坑，关于如何提高文件管理效率，小冰下次介绍。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a><strong>参考资料</strong></h3><p>[1] <strong>Listary pro版本: *<a href="https://www.listary.com/pro/">https://www.listary.com/pro\</a>*</strong></p><p>[2] <strong>Everything帮助界面: *<a href="http://www.voidtools.com/support/everything//">http://www.voidtools.com/support/everything/\</a>*</strong></p><p>[3] <strong>Listary 插件开发指南: *<a href="https://discussion.listary.com/t/listary/6127/">https://discussion.listary.com/t/listary/6127\</a>*</strong></p><p>[4] <strong>Listary 官方文档: *<a href="https://www.listary.com/docs/">https://www.listary.com/docs\</a>*</strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件评测 </tag>
            
            <tag> 效率软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PPO算法目标函数理解</title>
      <link href="/2022/03/02/ai-readpaper-pponote/"/>
      <url>/2022/03/02/ai-readpaper-pponote/</url>
      
        <content type="html"><![CDATA[<p>本文主要针对<a href="https://arxiv.org/abs/1707.06347">PPO</a>[<a href="https://zhuanlan.zhihu.com/p/438102587#ref_1">1]</a>算法的<strong>目标函数</strong>谈一点自己的理解，刚刚入门的小白，文中不对之处还望各位大佬批评指正。</p><p>PPO主要针对<a href="https://arxiv.org/abs/1502.05477">TRPO</a>[<a href="https://zhuanlan.zhihu.com/p/438102587#ref_2">2]</a>算法进行了改进，在保证具有TRPO算法性能的基础上，PPO实现更加简单，更具有通用性，同时有着更好的采样复杂度。</p><h2 id="Trust-Region-Methods"><a href="#Trust-Region-Methods" class="headerlink" title="Trust Region Methods"></a><strong>Trust Region Methods</strong></h2><p>策略梯度的目标函数为：<br>$$<br>L^{PG}(\theta) &#x3D; \hat{E}t [log \;\pi{\theta}(a_t | s_t)\hat{A_t}]\tag{1}<br>$$</p><p>置信域方法的目标函数为：    </p><p>$$<br>\begin{aligned}<br>\underset{\theta} {maximize} \quad \hat{E}t[\frac{\pi_\theta(a_t|s_t)}{\pi{\theta_{old} }(a_t|s_t)}\hat{A_t}] \\\<br>subject; to \quad \hat{E}t\bigg[KL[\pi{\theta_{old} }(\cdot |s_t),\pi_\theta(\cdot |s_t)]\bigg]<br>\end{aligned}\tag{2}<br>$$</p><p>根据(2)式可见置信域方法在策略梯度的基础上增加了约束，限制前后两个策略差异不大，而KL散度是衡量两个策略差异的。置信域方法解决了参数更新过快导致的难以收敛的问题。</p><p>之后提出的TRPO改进方法，将(2)式转换为了一个无约束的优化问题：  </p><p>$$<br>\underset{\theta} {maximize} \quad \hat{E}t\bigg[\frac{\pi_\theta(a_t|s_t)} {\pi{\theta_{old} }(a_t|s_t)}\hat{A_t}-\beta KL[\pi_{\theta_{old} }(\cdot |s_t),\pi_\theta(\cdot |s_t)]\bigg]\tag{3}<br>$$</p><p>但系数 $\beta$ 的选择是一个比较困难的问题，直接选用一个固定的参数进行SGD更新的效果并不会很好。</p><h2 id="Clipped-Surrogate-Objective"><a href="#Clipped-Surrogate-Objective" class="headerlink" title="Clipped Surrogate Objective"></a><strong>Clipped Surrogate Objective</strong></h2><p>对于(2)式，如果令$r_t(\theta)&#x3D;\frac{\pi_\theta(a_t |s_t)}{\pi_{\theta_{old}}}$ ,那么即可得到：   </p><p>$$<br>\begin{eqnarray}L^{CPI}(\theta)&#x3D;\hat{E}t\bigg[\frac{\pi_\theta(a_t|s_t)} {\pi{\theta_{old} }(a_t|s_t)} \hat{A_t}\bigg] &#x3D; \hat{E}_t\bigg[ r_t(\theta)\hat{A_t}\bigg]\end{eqnarray}\tag{4}<br>$$</p><p>如果对(4)式求最大值，会导致前后两个策略差异过大，也就是会<strong>导致</strong>$r_t(\theta)$<strong>过于偏离1</strong>， 影响性能，那么需要对(4)式进行修改，限制策略差异大小，即<strong>对</strong>$r_t(\theta)$<strong>设置一个范围</strong>   </p><p>$$<br>\begin{eqnarray}L^{CPIP}(\theta)&#x3D;\hat{E}_t\bigg[min( r_t(\theta)\hat{A_t},clip(r_t(\theta),1-\epsilon,1+\epsilon)\hat{A_t})\bigg]\end{eqnarray}\tag{5}<br>$$</p><p>其中$clip(x,up,down)$表示将x限制范围$[up,down]$ ,那么(5)式就将$r_t(\theta)$限制在$(1-\epsilon,1+\epsilon)$之间，一般取$\epsilon &#x3D; 0.2$，(5)式也就是PPO的目标函数，论文中对于(5)式进行了绘图表示。</p><p><img src="/2022/03/02/ai-readpaper-pponote/v2-5c9fff5eef1206226b29e97b44e66a63_r.jpg" alt="图1"></p><p>通过图1，并结合(5)式，那么可以将(5)式修改为：<br>$$<br>\begin{eqnarray}<br>\begin{aligned}<br>if \quad &amp;\hat{A_t}&gt;0\quad<br>L^{CLIP}(\theta)&#x3D;\begin{cases} (1+\epsilon) \hat{A_t} \quad &amp;r_t(\theta)&gt;1+\epsilon \\\<br>L^{CPI}&#x3D;r_t(\theta) \hat{A_t} \quad &amp;else\end{cases}\\\<br>if \quad &amp;\hat{A_t}&lt;0 \quad<br>L^{CLIP}(\theta)&#x3D;\begin{cases} (1-\epsilon)\hat{A_t}\quad &amp;r_t(\theta)&lt;1-\epsilon \\\<br>L^{CPI}&#x3D;r_t(\theta) \hat{A_t} \quad &amp;else\end{cases}<br>\end{aligned}\end{eqnarray}\tag{6}<br>$$<br>$\hat{A_t}$代表t时刻的优势函数，$\hat{A_t}$大于0表示此时策略更好，要加大优化力度。目标函数$L^{CLIP}(\theta)$取最大，那么就会<strong>尽量取大的$r_t(\theta)$<strong>。但如果</strong>更新力度过大，新旧策略差异太大，即$r_t&gt;1+\epsilon$<strong>，显然这不是我们希望的，那么</strong>clip操作和min操作会选择$r_t&#x3D;1+\epsilon$</strong>,这样就将最大的$r_t$限制到了$1+\epsilon$，防止了过度优化。</p><p>同样$\hat{A_t}$小于0表示此时策略更差，要减小优化力度，目标函数$L^{CLIP}(\theta)$取最大，那么就会<strong>尽量取小的$r_t(\theta)$<strong>。但如果</strong>更新力度过大，新旧策略差异太大，即$r_t&lt;1-\epsilon$<strong>，显然这不是我们希望的，那么</strong>clip操作和min操作会选择$r_t&#x3D;1-\epsilon$</strong>,这样就将最大的$r_t$限制到了$1-\epsilon$，减小了更新力度。</p><p>通过以上解释，对比TRPO的目标函数(式(2,3))和PPO的目标函数(式(5))，可以看到PPO的目标函数在限制前后策略差异不大的同时，避免了超参数的$\beta$调整的难度。仅从目标函数，就可以看到PPO算法在保障TRPO算法性能的同时，实现上更加简单。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/438102587#ref_1_0">^</a>John Schulman et al, Proximal Policy Optimization Algorithms: <a href="https://arxiv.org/abs/1707.06347">https://arxiv.org/abs/1707.06347</a></li><li><a href="https://zhuanlan.zhihu.com/p/438102587#ref_2_0">^</a>John Schulman et al , Trust Region Policy Optimization: <a href="https://arxiv.org/abs/1502.05477">https://arxiv.org/abs/1502.05477</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> RL </tag>
            
            <tag> PaperRead </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针&amp;链表</title>
      <link href="/2022/03/02/ag-doublepointer/"/>
      <url>/2022/03/02/ag-doublepointer/</url>
      
        <content type="html"><![CDATA[<h2 id="206-反转链表"><a href="#206-反转链表" class="headerlink" title="206. 反转链表"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转链表</a></h2><p><img src="/2022/03/02/ag-doublepointer/1645971484076-c26dec60-ae41-4a8d-a968-accbb4563304.png" alt="img"></p><h3 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h3><p>反转链表，仅仅需要扭转链表的指向顺序即可，如果用双指针实现的话，一个快指针，一个慢指针指向相邻的两个结点，并将结点的指向顺序改变即可。</p><p>思考一些细节问题，在扭转之前，我们需要一个空指针作为扭转后的尾部。</p><p>好，看代码</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">  ListNode<span class="token operator">*</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>ListNode<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>ListNode<span class="token operator">*</span> p0 <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>      ListNode<span class="token operator">*</span> p1 <span class="token operator">=</span> head<span class="token punctuation">;</span>      <span class="token keyword">while</span><span class="token punctuation">(</span>p1 <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      ListNode<span class="token operator">*</span> p2 <span class="token operator">=</span> p1<span class="token operator">-></span>next<span class="token punctuation">;</span>            p1<span class="token operator">-></span>next <span class="token operator">=</span> p0<span class="token punctuation">;</span>          p0 <span class="token operator">=</span> p1<span class="token punctuation">;</span>          p1 <span class="token operator">=</span> p2<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> p0<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有几个点需要注意：</p><ul><li><p>p0 作为 左指针， p1作为右指针</p></li><li><p>line6 首先要记录下p1的下一个指针，因为反转之后就变了</p></li><li><p>line8 一定要在line9之前</p></li></ul><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span><span class="token operator">:</span>    ListNode<span class="token operator">*</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>ListNode<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>ListNode<span class="token operator">*</span> p0 <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>        ListNode<span class="token operator">*</span> p1 <span class="token operator">=</span> head<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>p1 <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        ListNode<span class="token operator">*</span> p2 <span class="token operator">=</span> p1<span class="token operator">-></span>next<span class="token punctuation">;</span>              p1<span class="token operator">-></span>next <span class="token operator">=</span> p0<span class="token punctuation">;</span>            p0 <span class="token operator">=</span> p1<span class="token punctuation">;</span>            p1 <span class="token operator">=</span> p2<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> p0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="19-删除链表的倒数第-N-个结点"><a href="#19-删除链表的倒数第-N-个结点" class="headerlink" title="19. 删除链表的倒数第 N 个结点"></a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></h2><p><img src="/2022/03/02/ag-doublepointer/1645954811592-dbacf012-5d2b-48ba-838d-064cc1b87c71.png" alt="img"></p><h3 id="基本思路："><a href="#基本思路：" class="headerlink" title="基本思路："></a>基本思路：</h3><p>常规思路是先求出链表的长度，然后找到删去的结点删除，但要进行两次遍历。</p><p>如何才能够通过一次遍历实现呢？双指针中的快慢指针，让两个指针差n个单位，就可以找出要删除的结点进行删除。</p><p>那很容易想到应该写如下代码</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">ListNode<span class="token operator">*</span> ptr1 <span class="token operator">=</span> head<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> ptr1 <span class="token operator">=</span> ptr1<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>ListNode<span class="token operator">*</span> ptr2 <span class="token operator">=</span> head<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>ptr1 <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ptr1 <span class="token operator">=</span> ptr1<span class="token operator">-></span>next<span class="token punctuation">;</span>    ptr2 <span class="token operator">=</span> ptr2<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们思考上述代码会出现怎样的问题，我们只思考指针ptr2的起始位置即可。</p><p>以官方第一个例子为例</p><p><strong>输入：</strong>head &#x3D; [1,2,3,4,5], n &#x3D; 2 </p><p><strong>输出：</strong>[1,2,3,5]</p><p>ptr2指向第一个结点的时候，ptr1指向第三个结点，那么当ptr1指向nullptr时，ptr2 刚好指向倒数第2个结点。</p><p>这样我们就无法删除该结点，因此我们需要ptr2指向倒数第3个结点，那很好解决，直接让ptr1多走一个即可。</p><p>但还会出现问题，如果链表只有一个结点，并且n&#x3D;1，那么代码2-4行就会报错。那么怎么解决呢？既然ptr1不能多往后移动，那么我们可以让ptr2多往前移动。（注：当然可以将特殊情况摘出，但算法追求的更是一种通用解法）那么我们就需要在head前添加一个哑结点。</p><p>即</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">ListNode<span class="token operator">*</span> ptr1 <span class="token operator">=</span> head<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> ptr1 <span class="token operator">=</span> ptr1<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>ListNode<span class="token operator">*</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>ListNode<span class="token operator">*</span> ptr2 <span class="token operator">=</span> dummy<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>ptr1 <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    ptr1 <span class="token operator">=</span> ptr1<span class="token operator">-></span>next<span class="token punctuation">;</span>    ptr2 <span class="token operator">=</span> ptr2<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="完整代码-1"><a href="#完整代码-1" class="headerlink" title="完整代码"></a>完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span><span class="token operator">:</span>    ListNode<span class="token operator">*</span> <span class="token function">deleteNodenList</span><span class="token punctuation">(</span>ListNode<span class="token operator">*</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>ListNode<span class="token operator">*</span> ptr1 <span class="token operator">=</span> head<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            ptr1 <span class="token operator">=</span> ptr1<span class="token operator">-></span>next<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        ListNode<span class="token operator">*</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>        ListNode<span class="token operator">*</span> ptr2 <span class="token operator">=</span> dummy<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>ptr1 <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            ptr1 <span class="token operator">=</span> ptr1<span class="token operator">-></span>next<span class="token punctuation">;</span>            ptr2 <span class="token operator">=</span> ptr2<span class="token operator">-></span>next<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        ptr2<span class="token operator">-></span>next <span class="token operator">=</span> ptr2<span class="token operator">-></span>next<span class="token operator">-></span>next<span class="token punctuation">;</span>        <span class="token keyword">return</span> dummy<span class="token operator">-></span>next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 刷题笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 找工作 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
